(function(){var e,t,n;(function(r){function d(e,t){return h.call(e,t)}function v(e,t){var n,r,i,s,o,u,a,f,c,h,p=t&&t.split("/"),d=l.map,v=d&&d["*"]||{};if(e&&e.charAt(0)===".")if(t){p=p.slice(0,p.length-1),e=p.concat(e.split("/"));for(f=0;f<e.length;f+=1){h=e[f];if(h===".")e.splice(f,1),f-=1;else if(h===".."){if(f===1&&(e[2]===".."||e[0]===".."))break;f>0&&(e.splice(f-1,2),f-=2)}}e=e.join("/")}else e.indexOf("./")===0&&(e=e.substring(2));if((p||v)&&d){n=e.split("/");for(f=n.length;f>0;f-=1){r=n.slice(0,f).join("/");if(p)for(c=p.length;c>0;c-=1){i=d[p.slice(0,c).join("/")];if(i){i=i[r];if(i){s=i,o=f;break}}}if(s)break;!u&&v&&v[r]&&(u=v[r],a=f)}!s&&u&&(s=u,o=a),s&&(n.splice(0,o,s),e=n.join("/"))}return e}function m(e,t){return function(){return s.apply(r,p.call(arguments,0).concat([e,t]))}}function g(e){return function(t){return v(t,e)}}function y(e){return function(t){a[e]=t}}function b(e){if(d(f,e)){var t=f[e];delete f[e],c[e]=!0,i.apply(r,t)}if(!d(a,e)&&!d(c,e))throw new Error("No "+e);return a[e]}function w(e){var t,n=e?e.indexOf("!"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function E(e){return function(){return l&&l.config&&l.config[e]||{}}}var i,s,o,u,a={},f={},l={},c={},h=Object.prototype.hasOwnProperty,p=[].slice;o=function(e,t){var n,r=w(e),i=r[0];return e=r[1],i&&(i=v(i,t),n=b(i)),i?n&&n.normalize?e=n.normalize(e,g(t)):e=v(e,t):(e=v(e,t),r=w(e),i=r[0],e=r[1],i&&(n=b(i))),{f:i?i+"!"+e:e,n:e,pr:i,p:n}},u={require:function(e){return m(e)},exports:function(e){var t=a[e];return typeof t!="undefined"?t:a[e]={}},module:function(e){return{id:e,uri:"",exports:a[e],config:E(e)}}},i=function(e,t,n,i){var s,l,h,p,v,g=[],w;i=i||e;if(typeof n=="function"){t=!t.length&&n.length?["require","exports","module"]:t;for(v=0;v<t.length;v+=1){p=o(t[v],i),l=p.f;if(l==="require")g[v]=u.require(e);else if(l==="exports")g[v]=u.exports(e),w=!0;else if(l==="module")s=g[v]=u.module(e);else if(d(a,l)||d(f,l)||d(c,l))g[v]=b(l);else{if(!p.p)throw new Error(e+" missing "+l);p.p.load(p.n,m(i,!0),y(l),{}),g[v]=a[l]}}h=n.apply(a[e],g);if(e)if(s&&s.exports!==r&&s.exports!==a[e])a[e]=s.exports;else if(h!==r||!w)a[e]=h}else e&&(a[e]=n)},e=t=s=function(e,t,n,a,f){return typeof e=="string"?u[e]?u[e](t):b(o(e,t).f):(e.splice||(l=e,t.splice?(e=t,t=n,n=null):e=r),t=t||function(){},typeof n=="function"&&(n=a,a=f),a?i(r,e,t,n):setTimeout(function(){i(r,e,t,n)},4),s)},s.config=function(e){return l=e,l.deps&&s(l.deps,l.callback),s},n=function(e,t,n){t.splice||(n=t,t=[]),!d(a,e)&&!d(f,e)&&(f[e]=[e,t,n])},n.amd={jQuery:!0}})(),n("../../vendor/almond/almond",function(){}),n("common/actual-root",[],function(){var e=/^(\/.+?\/)(interactives|embeddable)\.html$/,t=/(\/.+?\/)(doc|examples|experiments)(\/\w+)*?\/\w+\.html/,n;return n=document.location.pathname.match(e),n&&n[1]?n[1]:(n=document.location.pathname.match(t),n&&n[1]||"/")}),n("lab.config",["require","common/actual-root"],function(e){var t=e("common/actual-root"),n;return n={sharing:!0,logging:!0,tracing:!1,home:"http://lab.concord.org",homeInteractivePath:"/examples/interactives/interactive.html",homeEmbeddablePath:"/examples/interactives/embeddable.html",fontface:"Lato",utmCampaign:null,hostName:"localhost:9292",authoring:!1,actualRoot:"",dataGamesProxyPrefix:"DataGames/Games/concord/lab/"},n.actualRoot=t,n}),n("common/console",["require","lab.config"],function(e){var t=e("lab.config"),n,r,i=function(){};return typeof console=="undefined"&&(console={},window&&(window.console=console)),r=console,r.log===undefined&&(r.log=i),r.info===undefined&&(r.info=i),r.warn===undefined&&(r.warn=i),r.error===undefined&&(r.error=i),r.time===undefined&&(r.time=i),r.timeEnd===undefined&&(r.timeEnd=i),r.log.apply===undefined&&(r.log=Function.prototype.bind.call(console.log,console)),r.info.apply===undefined&&(r.info=Function.prototype.bind.call(console.info,console)),r.warn.apply===undefined&&(r.warn=Function.prototype.bind.call(console.warn,console)),r.error.apply===undefined&&(r.error=Function.prototype.bind.call(console.error,console)),r.time.apply===undefined&&(r.time=Function.prototype.bind.call(console.time,console)),r.timeEnd.apply===undefined&&(r.timeEnd=Function.prototype.bind.call(console.timeEnd,console)),n={log:function(){t.logging&&r.log.apply(r,arguments)},info:function(){t.logging&&r.info.apply(r,arguments)},warn:function(){t.logging&&r.warn.apply(r,arguments)},error:function(){t.logging&&r.error.apply(r,arguments)},time:function(){t.tracing&&r.time.apply(r,arguments)},timeEnd:function(){t.tracing&&r.timeEnd.apply(r,arguments)}},n}),n("arrays/index",["require","exports","module"],function(e,t,n){var r={};r.version="0.0.1",r.webgl=typeof window!="undefined"&&!!window.WebGLRenderingContext,r.typed=function(){try{return new Float64Array(0),!0}catch(e){return!1}}(),r.create=function(e,t,n){n||(r.webgl||r.typed?n="Float32Array":n="regular"),t===undefined&&(t=0);var i,s;if(n==="regular")i=new Array(e);else switch(n){case"Float64Array":i=new Float64Array(e);break;case"Float32Array":i=new Float32Array(e);break;case"Int32Array":i=new Int32Array(e);break;case"Int16Array":i=new Int16Array(e);break;case"Int8Array":i=new Int8Array(e);break;case"Uint32Array":i=new Uint32Array(e);break;case"Uint16Array":i=new Uint16Array(e);break;case"Uint8Array":i=new Uint8Array(e);break;case"Uint8ClampedArray":i=new Uint8ClampedArray(e);break;default:throw new Error("arrays: couldn't understand array type \""+n+'".')}s=-1;while(++s<e)i[s]=t;return i},r.constructor_function=function(e){if(e.buffer&&e.buffer.__proto__&&e.buffer.__proto__.constructor&&Object.prototype.toString.call(e)==="[object Array]")return e.__proto__.constructor;switch(e.constructor){case Array:return Array;case Float32Array:return Float32Array;case Uint8Array:return Uint8Array;case Float64Array:return Float64Array;case Int32Array:return Int32Array;case Int16Array:return Int16Array;case Int8Array:return Int8Array;case Uint32Array:return Uint32Array;case Uint16Array:return Uint16Array;case Uint8ClampedArray:return Uint8ClampedArray;default:throw new Error("arrays.constructor_function: must be an Array or Typed Array:   source: "+e)}},r.copy=function(e,t){var n=e.length,i=-1;while(++i<n)t[i]=e[i];return r.constructor_function(t)===Array&&(t.length=n),t},r.clone=function(e){var t,n=e.length,i,s;s=r.constructor_function(e);if(s===Array){i=new s(n);for(t=0;t<n;t++)i[t]=e[t];return i}if(e.buffer.slice)return i=new s(e.buffer.slice(0)),i;i=new s(n);for(t=0;t<n;t++)i[t]=e[t];return i},r.between=function(e,t,n){return n<Math.max(e,t)&&n>Math.min(e,t)},r.max=function(e){return Math.max.apply(Math,e)},r.min=function(e){return Math.min.apply(Math,e)},r.maxTypedArray=function(e){var t,n,r=Number.MIN_VALUE,i=e.length;for(n=0;n<i;n++)t=e[n],r=t>r?t:r;return r},r.minTypedArray=function(e){var t,n,r=Number.MAX_VALUE,i=e.length;for(n=0;n<i;n++)t=e[n],r=t<r?t:r;return r},r.maxAnyArray=function(e){try{return Math.max.apply(Math,e)}catch(t){if(t instanceof TypeError){var n,r,i=Number.MIN_VALUE,s=e.length;for(r=0;r<s;r++)n=e[r],i=n>i?n:i;return i}}},r.minAnyArray=function(e){try{return Math.min.apply(Math,e)}catch(t){if(t instanceof TypeError){var n,r,i=Number.MAX_VALUE,s=e.length;for(r=0;r<s;r++)n=e[r],i=n<i?n:i;return i}}},r.average=function(e){var t,n=0,r=e.length;for(t=0;t<r;t++)n+=e[t];return n/r},r.extend=function(e,t){var n,i,s;i=r.constructor_function(e);if(i===Array){s=e.length,e.length=t;for(;s<t;s++)e[s]=0;return e}return n=new i(t),n.set(e.subarray(0,t)),n},r.remove=function(e,t){var n=r.constructor_function(e),i;if(n!==Array)throw new Error("arrays.remove for typed arrays not implemented yet.");return i=e.slice(t+1),e.length=t,Array.prototype.push.apply(e,i),e},r.isArray=function(e){if(e===undefined||e===null)return!1;switch(Object.prototype.toString.call(e)){case"[object Array]":case"[object Float32Array]":case"[object Float64Array]":case"[object Uint8Array]":case"[object Uint16Array]":case"[object Uint32Array]":case"[object Uint8ClampedArray]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":return!0;default:return!1}};for(var i in r)r.hasOwnProperty(i)&&(t[i]=r[i])}),n("arrays",["arrays/index"],function(e){return e}),n("energy2d/models/physics-solvers/heat-solver",["require","exports","module","arrays"],function(e,t,n){"use strict";var r=e("arrays"),i=5;t.makeHeatSolver=function(e){var t=e.getGridWidth(),n=e.getGridHeight(),s=e.getModelOptions(),o=s.timestep,u=s.boundary,a=s.model_width/e.getGridWidth(),f=s.model_height/e.getGridHeight(),l=i,c=e.getConductivityArray(),h=e.getCapacityArray(),p=e.getDensityArray(),d=e.getUVelocityArray(),v=e.getVVelocityArray(),m=e.getBoundaryTemperatureArray(),g=e.getFluidityArray(),y=r.create(t*n,0,e.getArrayType()),b=t-1,w=n-1,E=t-2,S=n-2,x=function(e){var r,i,s,o,l,h,p,d;if(u.temperature_at_border){r=u.temperature_at_border.upper,i=u.temperature_at_border.lower,s=u.temperature_at_border.left,o=u.temperature_at_border.right;for(l=0;l<t;l+=1)p=l*t,e[p]=r,e[p+w]=i;for(h=0;h<n;h+=1)e[h]=s,e[b*t+h]=o}else{if(!u.flux_at_border)throw new Error("Heat solver: wrong boundary settings definition.");r=u.flux_at_border.upper,i=u.flux_at_border.lower,s=u.flux_at_border.left,o=u.flux_at_border.right;for(l=0;l<t;l+=1)p=l*t,d=p+w,e[p]=e[p+1]+r*f/c[p],e[d]=e[p+S]-i*f/c[d];for(h=0;h<n;h+=1)e[h]=e[t+h]-s*a/c[h],e[b*t+h]=e[E*t+h]+o*a/c[b*t+h]}},T=function(e){var n=.5*o/a,r=.5*o/f,i,s,u,l,c,h,p,m;for(i=1;i<b;i+=1){u=i*t;for(s=1;s<w;s+=1)l=u+s,h=l-t,c=l+t,m=l-1,p=l+1,g[l]&&(y[l]=e[l]-n*(d[c]*e[c]-d[h]*e[h])-r*(v[p]*e[p]-v[m]*e[m]))}x(y);for(i=1;i<b;i+=1){u=i*t;for(s=1;s<w;s+=1)l=u+s,g[l]&&(h=l-t,c=l+t,m=l-1,p=l+1,e[l]=.5*(e[l]+y[l])-.5*n*d[l]*(y[c]-y[h])-.5*r*v[l]*(y[p]-y[m]))}x(e)};return{solve:function(e,n,i){var s=.5/(a*a),u=.5/(f*f),d=1/o,v,g,E,S,N,C,k,L,A,O,M,_,D,P,H;r.copy(n,y);for(k=0;k<l;k+=1){for(L=1;L<b;L+=1){O=L*t;for(A=1;A<w;A+=1)M=O+A,isNaN(m[M])?(D=M-t,_=M+t,H=M-1,P=M+1,g=h[M]*p[M]*d,v=c[M],E=s*(v+c[D]),S=s*(v+c[_]),N=u*(v+c[H]),C=u*(v+c[P]),n[M]=(y[M]*g+i[M]+E*n[D]+S*n[_]+N*n[H]+C*n[P])/(g+E+S+N+C)):n[M]=m[M]}x(n)}e&&T(n)}}}}),n("energy2d/gpu/context",[],function(){"use strict";var e;return{getWebGLContext:function(){if(e===undefined){var t=document.createElement("canvas");try{e=t.getContext("webgl")||t.getContext("experimental-webgl")}catch(n){}if(!e)throw new Error("GL: WebGL not supported.")}return e}}}),n("energy2d/gpu/shader",["require","common/console","energy2d/gpu/context"],function(e){"use strict";var t=e("common/console"),n=e("energy2d/gpu/context"),r,i=function(e,t,n){var r;while((r=e.exec(t))!==null)n(r)},s=function(e){var t=Object.prototype.toString.call(e);return t==="[object Array]"||t==="[object Float32Array]"},o=function(e){var t=Object.prototype.toString.call(e);return t==="[object Number]"||t==="[object Boolean]"},u;return u=function(e,t){function f(e,t){var n=r.createShader(e);r.shaderSource(n,t),r.compileShader(n);if(!r.getShaderParameter(n,r.COMPILE_STATUS))throw new Error("Shader: compile error.\n"+r.getShaderInfoLog(n)+"\nSource:\n"+t);return n}var s="      attribute vec4 gl_Vertex;      attribute vec4 gl_TexCoord;      attribute vec3 gl_Normal;      attribute vec4 gl_Color;      ",o="      precision highp float;      ",u=function(e,t){var n={},r;return r=/^((\s*\/\/.*\n|\s*#extension.*\n)+)[^]*$/.exec(t),t=r?r[1]+e+t.substr(r[1].length):e+t,i(/\bgl_\w+\b/g,e,function(e){n[e]===undefined&&(t=t.replace(new RegExp("\\b"+e+"\\b","g"),"_"+e),n[e]=!0)}),t},a={};r=n.getWebGLContext(),e=u(s,e),t=u(o,t),this.program=r.createProgram(),r.attachShader(this.program,f(r.VERTEX_SHADER,e)),r.attachShader(this.program,f(r.FRAGMENT_SHADER,t)),r.linkProgram(this.program);if(!r.getProgramParameter(this.program,r.LINK_STATUS))throw new Error("Shader: link error.\n"+r.getProgramInfoLog(this.program)+"\nSource:\n"+e+"\n\n"+t);this.attributes={},this.uniformLocations={},i(/uniform\s+sampler(1D|2D|3D|Cube)\s+(\w+)\s*;/g,e+t,function(e){a[e[2]]=1}),this.isSampler=a},u.prototype.uniforms=function(e){var n,i,u;r.useProgram(this.program);for(n in e)if(e.hasOwnProperty(n)){this.uniformLocations[n]===undefined&&(this.uniformLocations[n]=r.getUniformLocation(this.program,n)),i=this.uniformLocations[n];if(i===null){t.warn("Shader: name "+n+" does not correspond to an active uniform variable.");continue}u=e[n];if(s(u))switch(u.length){case 1:r.uniform1fv(i,new Float32Array(u));break;case 2:r.uniform2fv(i,new Float32Array(u));break;case 3:r.uniform3fv(i,new Float32Array(u));break;case 4:r.uniform4fv(i,new Float32Array(u));break;case 9:r.uniformMatrix3fv(i,!1,new Float32Array([u[0],u[3],u[6],u[1],u[4],u[7],u[2],u[5],u[8]]));break;case 16:r.uniformMatrix4fv(i,!1,new Float32Array([u[0],u[4],u[8],u[12],u[1],u[5],u[9],u[13],u[2],u[6],u[10],u[14],u[3],u[7],u[11],u[15]]));break;default:throw new Error("Shader: don't know how to load uniform \""+n+'" of length '+u.length)}else{if(!o(u))throw new Error('Shader: attempted to set uniform "'+n+'" to invalid value '+u);(this.isSampler[n]?r.uniform1i:r.uniform1f).call(r,i,u)}}return this},u.prototype.draw=function(e,t){r.useProgram(this.program),this.drawBuffers(e.vertexBuffers,e.indexBuffers[t===r.LINES?"lines":"triangles"],arguments.length<2?r.TRIANGLES:t)},u.prototype.drawBuffers=function(e,t,n){var i=0,s,o,u;for(s in e)if(e.hasOwnProperty(s)){o=e[s],this.attributes[s]===undefined&&(this.attributes[s]=r.getAttribLocation(this.program,s.replace(/^gl_/,"_gl_"))),u=this.attributes[s];if(u===-1||!o.buffer)continue;r.bindBuffer(r.ARRAY_BUFFER,o.buffer),r.enableVertexAttribArray(u),r.vertexAttribPointer(u,o.buffer.spacing,r.FLOAT,!1,0,0),i=o.buffer.length/o.buffer.spacing}for(s in this.attributes)this.attributes.hasOwnProperty(s)&&e[s]===undefined&&r.disableVertexAttribArray(this.attributes[s]);i&&(!t||t.buffer)&&(t?(r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.buffer),r.drawElements(n,t.buffer.length,r.UNSIGNED_SHORT,0)):r.drawArrays(n,0,i))},u}),n("energy2d/gpu/texture",["require","energy2d/gpu/context"],function(e){"use strict";var t=e("energy2d/gpu/context"),n,r;return r=function(e,r,i){n=t.getWebGLContext(),i=i||{},this.id=n.createTexture(),this.width=e,this.height=r,this.format=i.format||n.RGBA,this.type=i.type||n.UNSIGNED_BYTE,this.tex_unit=null,this.fbo=null,n.bindTexture(n.TEXTURE_2D,this.id),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,i.mag_filter||i.filter||n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,i.min_filter||i.filter||n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,i.wrap||i.wrap_s||n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,i.wrap||i.wrap_t||n.CLAMP_TO_EDGE),n.texImage2D(n.TEXTURE_2D,0,this.format,e,r,0,this.format,this.type,null)},r.prototype.setAsRenderTarget=function(){this.fbo===null?(this.fbo=n.createFramebuffer(),n.bindFramebuffer(n.FRAMEBUFFER,this.fbo),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,this.id,0),n.viewport(0,0,this.width,this.height)):(n.bindFramebuffer(n.FRAMEBUFFER,this.fbo),n.viewport(0,0,this.width,this.height))},r.prototype.bind=function(e){this.tex_unit=e||0,n.activeTexture(n.TEXTURE0+this.tex_unit),n.bindTexture(n.TEXTURE_2D,this.id)},r.prototype.unbind=function(e){if(this.tex_unit===null)return;n.activeTexture(n.TEXTURE0+this.tex_unit),n.bindTexture(n.TEXTURE_2D,null),this.tex_unit=null},r.prototype.drawTo=function(e){if(this.fbo===null)throw new Error("Texture: call setupAsRenderTarget() method first.");n.bindFramebuffer(n.FRAMEBUFFER,this.fbo),n.viewport(0,0,this.width,this.height),e(),n.bindFramebuffer(n.FRAMEBUFFER,null)},r.prototype.swapWith=function(e){var t;t=e.id,e.id=this.id,this.id=t,t=e.tex_unit,e.tex_unit=this.tex_unit,this.tex_unit=t,t=e.fbo,e.fbo=this.fbo,this.fbo=t},r}),n("energy2d/gpu/mesh",["require","energy2d/gpu/context"],function(e){"use strict";var t=e("energy2d/gpu/context"),n,r,i;return r=function(e,r){n=t.getWebGLContext(),this.buffer=null,this.target=e,this.type=r,this.data=[]},r.prototype.compile=function(e){var t=[],r,i,s;for(r=0,i=1e4;r<this.data.length;r+=i)t=Array.prototype.concat.apply(t,this.data.slice(r,r+i));s=this.data.length?t.length/this.data.length:0;if(s!==Math.round(s))throw new Error("Mesh: buffer elements not of consistent size, average size is "+s);this.buffer=this.buffer||n.createBuffer(),this.buffer.length=t.length,this.buffer.spacing=s,n.bindBuffer(this.target,this.buffer),n.bufferData(this.target,new this.type(t),e||n.STATIC_DRAW)},i=function(e){n=t.getWebGLContext(),e=e||{},this.vertexBuffers={},this.indexBuffers={},this.addVertexBuffer("vertices","gl_Vertex"),e.coords&&this.addVertexBuffer("coords","gl_TexCoord"),e.normals&&this.addVertexBuffer("normals","gl_Normal"),e.colors&&this.addVertexBuffer("colors","gl_Color"),(e.lines===undefined||e.triangles)&&this.addIndexBuffer("triangles"),e.lines&&this.addIndexBuffer("lines")},i.prototype.addVertexBuffer=function(e,t){var i=this.vertexBuffers[t]=new r(n.ARRAY_BUFFER,Float32Array);i.name=e,this[e]=[]},i.prototype.addIndexBuffer=function(e){var t=this.indexBuffers[e]=new r(n.ELEMENT_ARRAY_BUFFER,Uint16Array);this[e]=[]},i.prototype.compile=function(){var e,t,n;for(e in this.vertexBuffers)this.vertexBuffers.hasOwnProperty(e)&&(n=this.vertexBuffers[e],n.data=this[n.name],n.compile());for(t in this.indexBuffers)this.indexBuffers.hasOwnProperty(t)&&(n=this.indexBuffers[t],n.data=this[t],n.compile())},i.plane=function(e){var t,n,r,s,o,u,a,f;e=e||{},t=new i(e),n=e.detailX||e.detail||1,r=e.detailY||e.detail||1;for(o=0;o<=r;o+=1){u=o/r;for(s=0;s<=n;s+=1)a=s/n,t.vertices.push([2*a-1,2*u-1,0]),t.coords&&t.coords.push([a,u]),t.normals&&t.normals.push([0,0,1]),s<n&&o<r&&(f=s+o*(n+1),t.triangles.push([f,f+1,f+n+1]),t.triangles.push([f+n+1,f+1,f+n+2]))}return t.compile(),t},i}),n("energy2d/gpu/gpgpu",["require","energy2d/gpu/context","energy2d/gpu/texture","energy2d/gpu/shader","energy2d/gpu/mesh"],function(e){"use strict";var t=e("energy2d/gpu/context"),n=e("energy2d/gpu/texture"),r=e("energy2d/gpu/shader"),i=e("energy2d/gpu/mesh"),s,o,u,a,f,l,c,h,p=!1,d=!1,v,m,g="    varying vec2 coord;    void main() {      coord = gl_Vertex.xy * 0.5 + 0.5;      gl_Position = vec4(gl_Vertex.xyz, 1.0);    }",y="    uniform sampler2D texture;    uniform float channel;    varying vec2 coord;    float shift_right(float v, float amt) {      v = floor(v) + 0.5;      return floor(v / exp2(amt));    }    float shift_left(float v, float amt) {      return floor(v * exp2(amt) + 0.5);    }        float mask_last(float v, float bits) {      return mod(v, shift_left(1.0, bits));    }    float extract_bits(float num, float from, float to) {      from = floor(from + 0.5);      to = floor(to + 0.5);      return mask_last(shift_right(num, from), to - from);    }    vec4 encode_float(float val) {      if (val == 0.0)        return vec4(0, 0, 0, 0);      float sign = val > 0.0 ? 0.0 : 1.0;      val = abs(val);      float exponent = floor(log2(val));      float biased_exponent = exponent + 127.0;      float fraction = ((val / exp2(exponent)) - 1.0) * 8388608.0;            float t = biased_exponent / 2.0;      float last_bit_of_biased_exponent = fract(t) * 2.0;      float remaining_bits_of_biased_exponent = floor(t);            float byte4 = extract_bits(fraction, 0.0, 8.0) / 255.0;      float byte3 = extract_bits(fraction, 8.0, 16.0) / 255.0;      float byte2 = (last_bit_of_biased_exponent * 128.0 + extract_bits(fraction, 16.0, 23.0)) / 255.0;      float byte1 = (sign * 128.0 + remaining_bits_of_biased_exponent) / 255.0;      return vec4(byte4, byte3, byte2, byte1);    }    void main() {      vec4 data = texture2D(texture, coord);      if (channel == 0.0)        gl_FragColor = encode_float(data.r);      else if (channel == 1.0)        gl_FragColor = encode_float(data.g);      else if (channel == 2.0)        gl_FragColor = encode_float(data.b);      else        gl_FragColor = encode_float(data.a);    }",b="    uniform sampler2D texture;    varying vec2 coord;    void main() {      gl_FragColor = texture2D(texture, coord);    }",w="GPGPU: call init(grid_width, grid_height) with proper dimensions first!",E=function(){s=t.getWebGLContext();if(!s.getExtension("OES_texture_float"))throw new Error("GPGPU: OES_texture_float is not supported!");f=new n(1,1,{type:s.FLOAT,format:s.RGBA,filter:s.LINEAR}),f.setAsRenderTarget();if(s.checkFramebufferStatus(s.FRAMEBUFFER)!==s.FRAMEBUFFER_COMPLETE)throw s.bindFramebuffer(s.FRAMEBUFFER,null),new Error("GPGPU: FLOAT texture as render target is not supported!");s.bindFramebuffer(s.FRAMEBUFFER,null),s.disable(s.DEPTH_TEST),h=i.plane(),v=new r(g,y),m=new r(g,b),d=!0},S=function(e,t,n,r,i){var s,o,u,a;if(e.length!==t.length||e.length!==n.length||e.length!==r.length||i.length!==e.length*4)throw new Error("GPGPU: Invalid input data length.");for(o=0,a=e.length;o<a;o+=1)u=o*4,i[u]=e[o],i[u+1]=t[o],i[u+2]=n[o],i[u+3]=r[o]};return{init:function(e,t){d||E(),o=e,u=t,f=new n(o,u,{type:s.FLOAT,format:s.RGBA,filter:s.LINEAR}),l=new n(o,u,{type:s.UNSIGNED_BYTE,format:s.RGBA,filter:s.LINEAR}),c=new Float32Array(o*u*4)},getWebGLContext:function(){return s===undefined&&E(),s},createTexture:function(){var e;return!o||!u?new Error(w):(e=new n(o,u,{type:s.FLOAT,format:s.RGBA,filter:s.LINEAR}),e)},convertToRGBA:function(e,t,n){var r,i,s,a;if(e.length!==o*u)throw new Error("GPGPU: Invalid input data length.");n===undefined?r=new Float32Array(e.length*4):r=n,t===undefined&&(t=0);for(i=0,s=e.length;i<s;i+=1)a=i*4,r[a]=r[a+1]=r[a+2]=r[a+3]=0,r[a+t]=e[i];return r},writeTexture:function(e,t){var n=this.convertToRGBA(t,0,c);s.bindTexture(s.TEXTURE_2D,e.id),s.texImage2D(s.TEXTURE_2D,0,e.format,e.width,e.height,0,e.format,e.type,n)},writeRGBATexture:function(e,t,n,r,i){S(t,n,r,i,c),s.bindTexture(s.TEXTURE_2D,e.id),s.texImage2D(s.TEXTURE_2D,0,e.format,e.width,e.height,0,e.format,e.type,c)},readTexture:function(e,t,n){var r,i,a;if(!s||e.width!==o||e.height!==u)return new Error(w);n===undefined&&(n=0),r=new Uint8Array(t.buffer),e.bind(),l.setAsRenderTarget(),v.uniforms({channel:n}),v.draw(h),s.readPixels(0,0,l.width,l.height,l.format,l.type,r)},copyTexture:function(e,t){e.bind(),t.setAsRenderTarget(),m.draw(h)},executeProgram:function(e,t,n){var r,i;for(r=0,i=t.length;r<i;r+=1)t[r].bind(r);f.setAsRenderTarget(),e.draw(h);for(r=0,i=t.length;r<i;r+=1)t[r].unbind(r);n.swapWith(f)},setSynchronizationAllowed:function(e){p=e},tryFinish:function(){p&&s.finish()}}}),n("text",["module"],function(e){"use strict";var n,r,i=["Msxml2.XMLHTTP","Microsoft.XMLHTTP","Msxml2.XMLHTTP.4.0"],s=/^\s*<\?xml(\s)+version=[\'\"](\d)*.(\d)*[\'\"](\s)*\?>/im,o=/<body[^>]*>\s*([\s\S]+)\s*<\/body>/im,u=typeof location!="undefined"&&location.href,a=u&&location.protocol&&location.protocol.replace(/\:/,""),f=u&&location.hostname,l=u&&(location.port||undefined),c=[],h=e.config&&e.config()||{};return n={version:"2.0.2",strip:function(e){if(e){e=e.replace(s,"");var t=e.match(o);t&&(e=t[1])}else e="";return e},jsEscape:function(e){return e.replace(/(['\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r").replace(/[\u2028]/g,"\\u2028").replace(/[\u2029]/g,"\\u2029")},createXhr:h.createXhr||function(){var e,t,n;if(typeof XMLHttpRequest!="undefined")return new XMLHttpRequest;if(typeof ActiveXObject!="undefined")for(t=0;t<3;t+=1){n=i[t];try{e=new ActiveXObject(n)}catch(r){}if(e){i=[n];break}}return e},parseName:function(e){var t=!1,n=e.indexOf("."),r=e.substring(0,n),i=e.substring(n+1,e.length);return n=i.indexOf("!"),n!==-1&&(t=i.substring(n+1,i.length),t=t==="strip",i=i.substring(0,n)),{moduleName:r,ext:i,strip:t}},xdRegExp:/^((\w+)\:)?\/\/([^\/\\]+)/,useXhr:function(e,t,r,i){var s,o,u,a=n.xdRegExp.exec(e);return a?(s=a[2],o=a[3],o=o.split(":"),u=o[1],o=o[0],(!s||s===t)&&(!o||o.toLowerCase()===r.toLowerCase())&&(!u&&!o||u===i)):!0},finishLoad:function(e,t,r,i){r=t?n.strip(r):r,h.isBuild&&(c[e]=r),i(r)},load:function(e,t,r,i){if(i.isBuild&&!i.inlineText){r();return}h.isBuild=i.isBuild;var s=n.parseName(e),o=s.moduleName+"."+s.ext,c=t.toUrl(o),p=h.useXhr||n.useXhr;!u||p(c,a,f,l)?n.get(c,function(t){n.finishLoad(e,s.strip,t,r)},function(e){r.error&&r.error(e)}):t([o],function(e){n.finishLoad(s.moduleName+"."+s.ext,s.strip,e,r)})},write:function(e,t,r,i){if(c.hasOwnProperty(t)){var s=n.jsEscape(c[t]);r.asModule(e+"!"+t,"define(function () { return '"+s+"';});\n")}},writeFile:function(e,t,r,i,s){var o=n.parseName(t),u=o.moduleName+"."+o.ext,a=r.toUrl(o.moduleName+"."+o.ext)+".js";n.load(u,r,function(t){var r=function(e){return i(a,e)};r.asModule=function(e,t){return i.asModule(e,a,t)},n.write(e,u,r,s)},s)}},typeof process!="undefined"&&process.versions&&!!process.versions.node?(r=t.nodeRequire("fs"),n.get=function(e,t){var n=r.readFileSync(e,"utf8");n.indexOf("﻿")===0&&(n=n.substring(1)),t(n)}):typeof Packages!="undefined"&&typeof java!="undefined"?n.get=function(e,t){var n,r,i="utf-8",s=new java.io.File(e),o=java.lang.System.getProperty("line.separator"),u=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(s),i)),a="";try{n=new java.lang.StringBuffer,r=u.readLine(),r&&r.length()&&r.charAt(0)===65279&&(r=r.substring(1)),n.append(r);while((r=u.readLine())!==null)n.append(o),n.append(r);a=String(n.toString())}finally{u.close()}t(a)}:n.createXhr()&&(n.get=function(e,t,r){var i=n.createXhr();i.open("GET",e,!0),h.onXhr&&h.onXhr(i,e),i.onreadystatechange=function(n){var s,o;i.readyState===4&&(s=i.status,s>399&&s<600?(o=new Error(e+" HTTP status: "+s),o.xhr=i,r(o)):t(i.responseText))},i.send(null)}),n}),n("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/basic.vs.glsl",[],function(){return"varying vec2 coord;\n\nvoid main() {\n  coord = gl_Vertex.xy * 0.5 + 0.5;\n  gl_Position = vec4(gl_Vertex.xy, 0.0, 1.0);\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/solver.fs.glsl",[],function(){return'// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n\nuniform vec2 grid;\nuniform float hx;\nuniform float hy;\nuniform float inv_timestep;\n\n// Boundary conditions uniforms\nuniform float enforce_temp;\nuniform float vN;\nuniform float vS;\nuniform float vW;\nuniform float vE;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data0 = texture2D(data0_tex, coord);\n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y) {\n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    float tb = data0.b;\n    // Check if tb is NaN. isnan() function is not available\n    // in OpenGL ES GLSL, so use some tricks. IEEE 754 spec defines\n    // that NaN != NaN, however this seems to not work on Windows.\n    // So, also check if the value is outside [-3.4e38, 3.4e38] (3.4e38\n    // is close to 32Float max value), as such values are not expected.\n    if (tb != tb || tb < -3.4e38 || tb > 3.4e38) {\n      vec4 data1 = texture2D(data1_tex, coord);\n      vec4 data0_m_dy = texture2D(data0_tex, coord - dy);\n      vec4 data0_p_dy = texture2D(data0_tex, coord + dy);\n      vec4 data0_m_dx = texture2D(data0_tex, coord - dx);\n      vec4 data0_p_dx = texture2D(data0_tex, coord + dx);\n      float sij = data1.g * data1.b * inv_timestep;\n      float rij = data0.a;\n      float axij = hx * (rij + data0_m_dy.a);\n      float bxij = hx * (rij + data0_p_dy.a);\n      float ayij = hy * (rij + data0_m_dx.a);\n      float byij = hy * (rij + data0_p_dx.a);\n      data0.r = (data0.g * sij + data1.r\n                 + axij * data0_m_dy.r\n                 + bxij * data0_p_dy.r\n                 + ayij * data0_m_dx.r\n                 + byij * data0_p_dx.r)\n                 / (sij + axij + bxij + ayij + byij);\n    } else {\n      data0.r = tb;\n    }\n  } else if (enforce_temp == 1.0) {\n    // "temperature at border" boundary conditions are\n    // integrated into this shader.\n    if (coord.x < grid.x) {\n      data0.r = vN;\n    } else if (coord.x > 1.0 - grid.x) {\n      data0.r = vS;\n    } else if (coord.y < grid.y) {\n      data0.r = vW;\n    } else if (coord.y > 1.0 - grid.y) {\n      data0.r = vE;\n    }\n  }\n  gl_FragColor = data0;\n}\n'}),n("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/force-flux-t.fs.glsl",[],function(){return"// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n\nuniform vec2 grid;\nuniform float vN;\nuniform float vS;\nuniform float vW;\nuniform float vE;\nuniform float delta_x;\nuniform float delta_y;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data0 = texture2D(data0_tex, coord);\n  vec2 dx = vec2(grid.x, 0.0);\n  vec2 dy = vec2(0.0, grid.y);\n  if (coord.x < grid.x) {\n    data0.r = texture2D(data0_tex, coord + dx).r\n            + vN * delta_y / data0.a;\n  } else if (coord.x > 1.0 - grid.x) {\n    data0.r = texture2D(data0_tex, coord - dx).r\n            - vS * delta_y / data0.a;\n  } else if (coord.y < grid.y) {\n    data0.r = texture2D(data0_tex, coord + dy).r\n            - vW * delta_x / data0.a;\n  } else if (coord.y > 1.0 - grid.y) {\n    data0.r = texture2D(data0_tex, coord - dy).r\n            + vE * delta_x / data0.a;\n  }\n  gl_FragColor = data0;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/t-to-t0.fs.glsl",[],function(){return"// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n\nvarying vec2 coord;\n\nvoid main() {\n	vec4 data0 = texture2D(data0_tex, coord);\n	data0.g = data0.r;\n	gl_FragColor = data0;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/maccormack-step1.fs.glsl",[],function(){return'// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float tx;\nuniform float ty;\n\n// Boundary conditions uniforms.\nuniform float enforce_temp;\nuniform float vN;\nuniform float vS;\nuniform float vW;\nuniform float vE;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data0 = texture2D(data0_tex, coord);\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y) {\n    \n    float fluidity = texture2D(data1_tex, coord).a;\n    if (fluidity == 1.0) {\n      vec2 dx = vec2(grid.x, 0.0);\n      vec2 dy = vec2(0.0, grid.y);\n\n      // Temperature.\n      float t_m_dy = texture2D(data0_tex, coord - dy).r;\n      float t_p_dy = texture2D(data0_tex, coord + dy).r;\n      float t_m_dx = texture2D(data0_tex, coord - dx).r;\n      float t_p_dx = texture2D(data0_tex, coord + dx).r;\n      // Velocity.\n      float u_m_dy = texture2D(data2_tex, coord - dy).r;\n      float u_p_dy = texture2D(data2_tex, coord + dy).r;\n      float v_m_dx = texture2D(data2_tex, coord - dx).g;\n      float v_p_dx = texture2D(data2_tex, coord + dx).g;\n      // Update T0.\n      data0.g = data0.r - tx * (u_p_dy * t_p_dy - u_m_dy * t_m_dy)\n                        - ty * (v_p_dx * t_p_dx - v_m_dx * t_m_dx);\n    }\n  } else if (enforce_temp == 1.0) {\n    // "temperature at border" boundary conditions are\n    // integrated into this shader.\n    if (coord.x < grid.x) {\n      data0.g = vN;\n    } else if (coord.x > 1.0 - grid.x) {\n      data0.g = vS;\n    } else if (coord.y < grid.y) {\n      data0.g = vW;\n    } else if (coord.y > 1.0 - grid.y) {\n      data0.g = vE;\n    }\n  }\n  gl_FragColor = data0;\n}\n'}),n("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/maccormack-step2.fs.glsl",[],function(){return'// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float tx;\nuniform float ty;\n\n// Boundary conditions uniforms.\nuniform float enforce_temp;\nuniform float vN;\nuniform float vS;\nuniform float vW;\nuniform float vE;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data0 = texture2D(data0_tex, coord);\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y) {\n    \n    float fluidity = texture2D(data1_tex, coord).a;\n    if (fluidity == 1.0) {\n      vec2 dx = vec2(grid.x, 0.0);\n      vec2 dy = vec2(0.0, grid.y);\n\n      // Temperature t0.\n      float t0_m_dy = texture2D(data0_tex, coord - dy).g;\n      float t0_p_dy = texture2D(data0_tex, coord + dy).g;\n      float t0_m_dx = texture2D(data0_tex, coord - dx).g;\n      float t0_p_dx = texture2D(data0_tex, coord + dx).g;\n      // Velocity.\n      float u = texture2D(data2_tex, coord).r;\n      float v = texture2D(data2_tex, coord).g;\n      // Update T.\n      data0.r = 0.5 * (data0.r + data0.g)\n              - 0.5 * tx * u * (t0_p_dy - t0_m_dy)\n              - 0.5 * ty * v * (t0_p_dx - t0_m_dx);\n    }\n  } else if (enforce_temp == 1.0) {\n    // "temperature at border" boundary conditions are\n    // integrated into this shader.\n    if (coord.x < grid.x) {\n      data0.r = vN;\n    } else if (coord.x > 1.0 - grid.x) {\n      data0.r = vS;\n    } else if (coord.y < grid.y) {\n      data0.r = vW;\n    } else if (coord.y > 1.0 - grid.y) {\n      data0.r = vE;\n    }\n  }\n  gl_FragColor = data0;\n}\n'
}),n("energy2d/models/physics-solvers-gpu/heat-solver-gpu",["require","exports","module","energy2d/gpu/shader","energy2d/gpu/gpgpu","text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/basic.vs.glsl","text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/solver.fs.glsl","text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/force-flux-t.fs.glsl","text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/force-flux-t.fs.glsl","text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/t-to-t0.fs.glsl","text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/maccormack-step1.fs.glsl","text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/maccormack-step2.fs.glsl"],function(e,t,n){"use strict";var r=e("energy2d/gpu/shader"),i=e("energy2d/gpu/gpgpu"),s=e("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/basic.vs.glsl"),o=e("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/solver.fs.glsl"),u=e("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/force-flux-t.fs.glsl"),a=e("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/force-flux-t.fs.glsl"),f=e("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/t-to-t0.fs.glsl"),l=e("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/maccormack-step1.fs.glsl"),c=e("text!energy2d/models/physics-solvers-gpu/heat-solver-glsl/maccormack-step2.fs.glsl"),h=10;t.makeHeatSolverGPU=function(e){var t=new r(s,o),n=new r(s,u),p=new r(s,a),d=new r(s,f),v=new r(s,l),m=new r(s,c),g=e.getGridWidth(),y=e.getGridHeight(),b=e.getModelOptions(),w=b.timestep,E=b.boundary,S=b.model_width/e.getGridWidth(),x=b.model_height/e.getGridHeight(),T=h,N=e.getSimulationTexture(0),C=e.getSimulationTexture(1),k=e.getSimulationTexture(2),L=[N,C,k],A=[N,C],O=[N],M=[1/y,1/g],_=function(){var e;e={data0_tex:0,data1_tex:1,grid:M,enforce_temp:0,hx:.5/(S*S),hy:.5/(x*x),inv_timestep:1/w},t.uniforms(e),e={data0_tex:0,data1_tex:1,data2_tex:2,grid:M,enforce_temp:0,tx:.5*w/S,ty:.5*w/x},v.uniforms(e),m.uniforms(e),E.temperature_at_border?(e={enforce_temp:1,vN:E.temperature_at_border.upper,vS:E.temperature_at_border.lower,vW:E.temperature_at_border.left,vE:E.temperature_at_border.right},t.uniforms(e),v.uniforms(e),m.uniforms(e)):E.flux_at_border&&(e={data0_tex:0,grid:M,vN:E.flux_at_border.upper,vS:E.flux_at_border.lower,vW:E.flux_at_border.left,vE:E.flux_at_border.right,delta_x:S,delta_y:x},n.uniforms(e),p.uniforms(e))},D=function(){i.executeProgram(v,L,N),E.flux_at_border&&i.executeProgram(p,O,N),i.executeProgram(m,L,N),E.flux_at_border&&i.executeProgram(n,O,N)},P={solve:function(e){var r;i.executeProgram(d,O,N);for(r=0;r<T;r+=1)i.executeProgram(t,A,N),E.flux_at_border&&i.executeProgram(n,O,N);e&&D(),i.tryFinish()}};return _(),P}}),n("energy2d/models/physics-solvers/fluid-solver",["require","exports","module","arrays"],function(e,t,n){"use strict";var r=e("arrays"),i=5,s=0,o=0,u=1;t.makeFluidSolver=function(e){var t=e.getGridWidth(),n=e.getGridHeight(),a=e.getModelOptions(),f=a.timestep,l=a.thermal_buoyancy,c=a.buoyancy_approximation,h=a.background_viscosity,p=a.model_width/e.getGridWidth(),d=a.model_height/e.getGridHeight(),v=i,m=s,g=e.getTemperatureArray(),y=e.getFluidityArray(),b=e.getUWindArray(),w=e.getVWindArray(),E=e.getArrayType(),S=r.create(t*n,0,E),x=r.create(t*n,0,E),T=.5/p,N=.5/d,C=1/(p*p),k=1/(d*d),L=t-1,A=n-1,O=t-2,M=n-2,_=function(e,n){var r=e===1,i=e===2,s=L*t,o=O*t,u,a,f,l,c,h,p;for(u=1;u<L;u+=1)f=u*t,l=f+1,c=f+A,h=f+M,n[f]=i?-n[l]:n[l],n[c]=i?-n[h]:n[h];for(a=1;a<A;a+=1)p=t+a,n[a]=r?-n[p]:n[p],n[s+a]=r?-n[o+a]:n[o+a];n[0]=.5*(n[t]+n[1]),n[s]=.5*(n[o]+n[s+1]),n[A]=.5*(n[t+A]+n[M]),n[s+A]=.5*(n[o+A]+n[s+M])},D=function(e,n){var r=0,i,s,o,u,a,f,l,c,h,p;for(o=1;o<L;o+=1){a=o*t;for(u=1;u<A;u+=1)f=a+u,c=f-t,l=f+t,p=f-1,h=f+1,y[f]||(i=b[f],s=w[f],r=0,y[c]?(r+=1,e[f]=i-e[c],n[f]=s+n[c]):y[l]&&(r+=1,e[f]=i-e[l],n[f]=s+n[l]),y[p]?(r+=1,e[f]=i+e[p],n[f]=s-n[p]):y[h]&&(r+=1,e[f]=i+e[h],n[f]=s-n[h]),r===0&&(e[f]=i,n[f]=s))}},P=function(e){var n,r,i,s,o,u,a,f;for(n=1;n<L;n+=1){i=n*t;for(r=1;r<A;r+=1)s=i+r,y[s]||(u=s-t,o=s+t,f=s-1,a=s+1,y[u]?e[s]=e[u]:y[o]&&(e[s]=e[o]),y[f]?e[s]=e[f]:y[a]&&(e[s]=e[a]))}},H=function(e,r){var i=0,s=n,o=0,u,a;for(u=r-1;u>0;u-=1){a=e*t+u;if(!y[a]){i=u;break}}for(u=r+1;u<n;u+=1){a=e*t+u;if(!y[a]){s=u;break}}for(u=i;u<s;u+=1)a=e*t+u,o+=g[a];return o/(s-i)},B=function(e){var n=m*f,r=l*f,i,s,a,h,p;switch(c){case o:i=function(e){var t=0,n=e.length,r;for(r=0;r<n;r+=1)t+=e[r];return t/n}(g);for(s=1;s<L;s+=1){h=s*t;for(a=1;a<A;a+=1)p=h+a,y[p]&&(e[p]+=(n-r)*g[p]+r*i)}break;case u:for(s=1;s<L;s+=1){h=s*t;for(a=1;a<A;a+=1)p=h+a,y[p]&&(i=H(s,a),e[p]+=(n-r)*g[p]+r*i)}}},j=function(e,n,r,i){var s=.5/(C+k),o,u,a,f,l,c,h,p,d;for(u=1;u<L;u+=1){f=u*t;for(a=1;a<A;a+=1)l=f+a,y[l]&&(h=l-t,c=l+t,d=l-1,p=l+1,i[l]=(e[c]-e[h])*T+(n[p]-n[d])*N,r[l]=0)}_(0,i),_(0,r),P(i),P(r);for(o=0;o<v;o+=1)for(u=1;u<L;u+=1){f=u*t;for(a=1;a<A;a+=1)l=f+a,y[l]&&(h=l-t,c=l+t,d=l-1,p=l+1,r[l]=s*((r[h]+r[c])*C+(r[d]+r[p])*k-i[l]))}for(u=1;u<L;u+=1){f=u*t;for(a=1;a<A;a+=1)l=f+a,y[l]&&(h=l-t,c=l+t,d=l-1,p=l+1,e[l]-=(r[c]-r[h])*T,n[l]-=(r[p]-r[d])*N)}_(1,e),_(2,n)},F=function(e,n,i){var s=f*h*C,o=f*h*k,u=1/(1+2*(s+o)),a,l,c,p,d,m,g,b,w;r.copy(i,n);for(a=0;a<v;a+=1){for(l=1;l<L;l+=1){p=l*t;for(c=1;c<A;c+=1)d=p+c,y[d]&&(g=d-t,m=d+t,w=d-1,b=d+1,i[d]=(n[d]+s*(i[g]+i[m])+o*(i[w]+i[b]))*u)}_(e,i)}},I=function(e,n,i){var s=.5*f/p,o=.5*f/d,u,a,l,c,h,v,m,g;for(u=1;u<L;u+=1){l=u*t;for(a=1;a<A;a+=1)c=l+a,y[c]&&(v=c-t,h=c+t,g=c-1,m=c+1,i[c]=n[c]-s*(S[h]*n[h]-S[v]*n[v])-o*(x[m]*n[m]-x[g]*n[g]))}_(e,i);for(u=1;u<L;u+=1){l=u*t;for(a=1;a<A;a+=1)c=l+a,y[c]&&(v=c-t,h=c+t,g=c-1,m=c+1,n[c]=.5*(n[c]+i[c])-.5*s*S[c]*(i[h]-i[v])-.5*o*x[c]*(i[m]-i[g]))}r.copy(n,i),_(e,i)},q=function(e,t,n){I(e,t,n)};return{solve:function(e,t){l!==0&&B(t),D(e,t),h>0&&(F(1,S,e),F(2,x,t),j(e,t,S,x),D(e,t)),r.copy(e,S),r.copy(t,x),q(1,S,e),q(2,x,t),j(e,t,S,x),D(e,t)}}}}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/basic.vs.glsl",[],function(){return"varying vec2 coord;\n\nvoid main() {\n  coord = gl_Vertex.xy * 0.5 + 0.5;\n  gl_Position = vec4(gl_Vertex.xy, 0.0, 1.0);\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/maccormack-step1.fs.glsl",[],function(){return"// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float tx;\nuniform float ty;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    // Update velocity UV components.\n    data2.rg = data2.ba - tx * (data2_p_dy.bb * data2_p_dy.ba - data2_m_dy.bb * data2_m_dy.ba)\n              - ty * (data2_p_dx.aa * data2_p_dx.ba - data2_m_dx.aa * data2_m_dx.ba);\n  }\n\n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/maccormack-step2.fs.glsl",[],function(){return"// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float tx;\nuniform float ty;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    // Update velocity UV components.\n    data2.rg = 0.5 * (data2.ba + data2.rg) \n            - 0.5 * tx * data2.bb * (data2_p_dy.rg - data2_m_dy.rg)\n            - 0.5 * ty * data2.aa * (data2_p_dx.rg - data2_m_dx.rg);\n  }\n\n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/apply-uv-boundary.fs.glsl",[],function(){return"// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  vec2 dx = vec2(grid.x, 0.0);\n  vec2 dy = vec2(0.0, grid.y);\n  // Process corners.\n  // TODO: values from previous step are used for corners.\n  if (coord.x < grid.x && coord.y < grid.y) {  \n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.rg = 0.5 * (data2_p_dy.rg + data2_p_dx.rg);\n  }\n  else if (coord.x > 1.0 - grid.x && coord.y < grid.y) {  \n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.rg = 0.5 * (data2_p_dy.rg + data2_m_dx.rg);\n  }\n  else if (coord.x > 1.0 - grid.x && coord.y > 1.0 - grid.y) {  \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.rg = 0.5 * (data2_m_dy.rg + data2_m_dx.rg);\n  }\n  else if (coord.x < grid.x && coord.y > 1.0 - grid.y) {  \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.rg = 0.5 * (data2_m_dy.rg + data2_p_dx.rg);\n  }\n  // Process boundaries.\n  // Left.\n  else if (coord.x < grid.x) {\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.rg = vec2(data2_p_dx.r, -data2_p_dx.g);\n  }\n  // Right.\n  else if (coord.x > 1.0 - grid.x) {\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.rg = vec2(data2_m_dx.r, -data2_m_dx.g);\n  }\n  // Down.\n  else if (coord.y < grid.y) {\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    data2.rg = vec2(-data2_p_dy.r, data2_p_dy.g);\n  }\n  // Up.\n  else if (coord.y > 1.0 - grid.y) {\n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    data2.rg = vec2(-data2_m_dy.r, data2_m_dy.g);\n  }\n  \n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/apply-u0v0-boundary.fs.glsl",[],function(){return"// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  vec2 dx = vec2(grid.x, 0.0);\n  vec2 dy = vec2(0.0, grid.y);\n  // Process corners.\n  // TODO: values from previous step are used for corners.\n  if (coord.x < grid.x && coord.y < grid.y) {  \n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.ba = 0.5 * (data2_p_dy.ba + data2_p_dx.ba);\n  }\n  else if (coord.x > 1.0 - grid.x && coord.y < grid.y) {  \n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.ba = 0.5 * (data2_p_dy.ba + data2_m_dx.ba);\n  }\n  else if (coord.x > 1.0 - grid.x && coord.y > 1.0 - grid.y) {  \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    data2.ba = 0.5 * (data2_m_dy.ba + data2_m_dx.ba);\n  }\n  else if (coord.x < grid.x && coord.y > 1.0 - grid.y) {  \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    data2.ba = 0.5 * (data2_m_dy.ba + data2_p_dx.ba);\n  }\n  // Process boundaries.\n  // Left.\n  else if (coord.x < grid.x) {\n    data2.ba = texture2D(data2_tex, coord + dx).ba;\n  }\n  // Right.\n  else if (coord.x > 1.0 - grid.x) {\n    data2.ba = texture2D(data2_tex, coord - dx).ba;\n  }\n  // Down.\n  else if (coord.y < grid.y) {\n    data2.ba = texture2D(data2_tex, coord + dy).ba;\n  }\n  // Up.\n  else if (coord.y > 1.0 - grid.y) {\n    data2.ba = texture2D(data2_tex, coord - dy).ba;\n  }\n  \n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/set-obstacle-boundary.fs.glsl",[],function(){return"// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 0.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n\n    if (texture2D(data1_tex, coord - dy).a == 1.0) {\n      data2.ba = texture2D(data2_tex, coord - dy).ba;\n    } \n    else if (texture2D(data1_tex, coord + dy).a == 1.0) {\n      data2.ba = texture2D(data2_tex, coord + dy).ba;\n    } \n\n    if (texture2D(data1_tex, coord - dx).a == 1.0) {\n      data2.ba = texture2D(data2_tex, coord - dx).ba;\n    } \n    else if (texture2D(data1_tex, coord + dx).a == 1.0) {\n      data2.ba = texture2D(data2_tex, coord + dx).ba;\n    } \n  }\n\n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/set-obstacle-velocity.fs.glsl",[],function(){return"// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n// texture 3: \n// - R: uWind\n// - G: vWind\n// - B: undefined\n// - A: undefined\nuniform sampler2D data3_tex;\n\nuniform vec2 grid;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n\n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 0.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n\n    int count = 0;\n\n    if (texture2D(data1_tex, coord - dy).a == 1.0) {\n      count += 1;\n      vec2 data2_m_dy = texture2D(data2_tex, coord - dy).rg;\n      data2.rg = texture2D(data3_tex, coord).rg + vec2(-data2_m_dy.r, data2_m_dy.g);\n    } \n    else if (texture2D(data1_tex, coord + dy).a == 1.0) {\n      count += 1;\n      vec2 data2_p_dy = texture2D(data2_tex, coord + dy).rg;\n      data2.rg = texture2D(data3_tex, coord).rg + vec2(-data2_p_dy.r, data2_p_dy.g);\n    } \n\n    if (texture2D(data1_tex, coord - dx).a == 1.0) {\n      count += 1;\n      vec2 data2_m_dx = texture2D(data2_tex, coord - dx).rg;\n      data2.rg = texture2D(data3_tex, coord).rg + vec2(data2_m_dx.r, -data2_m_dx.g);\n    } \n    else if (texture2D(data1_tex, coord + dx).a == 1.0) {\n      count += 1;\n      vec2 data2_p_dx = texture2D(data2_tex, coord + dx).rg;\n      data2.rg = texture2D(data3_tex, coord).rg + vec2(data2_p_dx.r, -data2_p_dx.g);\n    } \n\n    if (count == 0) {\n      data2.rg = texture2D(data3_tex, coord).rg;\n    }\n  }\n  \n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/uv-to-u0v0.fs.glsl",[],function(){return"// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nvarying vec2 coord;\n\nvoid main() {\n	vec4 data2 = texture2D(data2_tex, coord);\n	data2.ba = data2.rg;\n	gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/conserve-step1.fs.glsl",[],function(){return"// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float i2dx;\nuniform float i2dy;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    \n    // Phi.\n    data2.b = 0.0;\n    // Div.\n    data2.a = (data2_p_dy.r - data2_m_dy.r) * i2dx + (data2_p_dx.g - data2_m_dx.g) * i2dy;\n  }\n\n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/conserve-step2.fs.glsl",[],function(){return"// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float s;\nuniform float idxsq;\nuniform float idysq;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    \n    // Phi.\n    data2.b = s * ((data2_m_dy.b + data2_p_dy.b) * idxsq + (data2_m_dx.b + data2_p_dx.b) * idysq - data2.a);\n  }\n\n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/conserve-step3.fs.glsl",[],function(){return"// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float i2dx;\nuniform float i2dy;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    \n    // U.\n    data2.r -= (data2_p_dy.b - data2_m_dy.b) * i2dx;\n    // V.\n    data2.g -= (data2_p_dx.b - data2_m_dx.b) * i2dy;\n  }\n\n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/diffuse.fs.glsl",[],function(){return"// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float hx;\nuniform float hy;\nuniform float dn;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    vec4 data2_m_dy = texture2D(data2_tex, coord - dy);\n    vec4 data2_p_dy = texture2D(data2_tex, coord + dy);\n    vec4 data2_m_dx = texture2D(data2_tex, coord - dx);\n    vec4 data2_p_dx = texture2D(data2_tex, coord + dx);\n    // Update velocity UV components.\n    data2.rg = (data2.ba + hx * (data2_m_dy.rg + data2_p_dy.rg)\n                         + hy * (data2_m_dx.rg + data2_p_dx.rg)) * dn;\n  }\n\n  gl_FragColor = data2;\n}\n"}),n("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/apply-buoyancy.fs.glsl",[],function(){return"// texture 0: \n// - R: t\n// - G: t0\n// - B: tb\n// - A: conductivity\nuniform sampler2D data0_tex;\n// texture 1: \n// - R: q\n// - G: capacity\n// - B: density\n// - A: fluidity\nuniform sampler2D data1_tex;\n// texture 2: \n// - R: u\n// - G: v\n// - B: u0\n// - A: v0\nuniform sampler2D data2_tex;\n\nuniform vec2 grid;\nuniform float g;\nuniform float b;\n\nvarying vec2 coord;\n\nvoid main() {\n  vec4 data2 = texture2D(data2_tex, coord);\n  float fluidity = texture2D(data1_tex, coord).a;\n  \n  if (coord.x > grid.x && coord.x < 1.0 - grid.x &&\n      coord.y > grid.y && coord.y < 1.0 - grid.y &&\n      fluidity == 1.0) {\n    \n    vec2 dx = vec2(grid.x, 0.0);\n    vec2 dy = vec2(0.0, grid.y);\n    \n    float t = texture2D(data0_tex, coord).r;\n    // Get average column temperature.\n\n    float avg_t = t;\n    float count = 1.0;\n    vec2 n_coord = coord - dx;\n    // Silly while(true) loop (almost).\n    // While loops are not allowed.\n    // For loops with non-constant expressions also.\n    for (int i = 1; i != 0; i++) {\n      if (n_coord.x > 0.0 && texture2D(data1_tex, n_coord).a == 1.0) {\n        avg_t += texture2D(data0_tex, n_coord).r;\n        count += 1.0;\n        n_coord -= dx;\n      } else {\n        break;\n      }\n    }\n    n_coord = coord + dx;\n    // Silly while(true) loop (almost).\n    // While loops are not allowed.\n    // For loops with non-constant expressions also.\n    for (int i = 1; i != 0; i++) {\n      if (n_coord.x < 1.0 && texture2D(data1_tex, n_coord).a == 1.0) {\n        avg_t += texture2D(data0_tex, n_coord).r;\n        count += 1.0;\n        n_coord += dx;\n      } else {\n        break;\n      }\n    }\n    avg_t /= count;\n\n    // Update velocity V component.\n    data2.g += (g - b) * t + b * avg_t;\n  }\n\n  gl_FragColor = data2;\n}\n"}),n("energy2d/models/physics-solvers-gpu/fluid-solver-gpu",["require","exports","module","energy2d/gpu/shader","energy2d/gpu/gpgpu","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/basic.vs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/maccormack-step1.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/maccormack-step2.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/apply-uv-boundary.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/apply-u0v0-boundary.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/set-obstacle-boundary.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/set-obstacle-velocity.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/uv-to-u0v0.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/conserve-step1.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/conserve-step2.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/conserve-step3.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/diffuse.fs.glsl","text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/apply-buoyancy.fs.glsl"],function(e,t,n){"use strict";var r=e("energy2d/gpu/shader"),i=e("energy2d/gpu/gpgpu"),s=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/basic.vs.glsl"),o=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/maccormack-step1.fs.glsl"),u=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/maccormack-step2.fs.glsl"),a=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/apply-uv-boundary.fs.glsl"),f=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/apply-u0v0-boundary.fs.glsl"),l=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/set-obstacle-boundary.fs.glsl"),c=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/set-obstacle-velocity.fs.glsl"),h=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/uv-to-u0v0.fs.glsl"),p=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/conserve-step1.fs.glsl"),d=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/conserve-step2.fs.glsl"),v=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/conserve-step3.fs.glsl"),m=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/diffuse.fs.glsl"),g=e("text!energy2d/models/physics-solvers-gpu/fluid-solver-glsl/apply-buoyancy.fs.glsl"),y=10,b=0,w=0,E=1;t.makeFluidSolverGPU=function(e){var t=new r(s,o),n=new r(s,u),w=new r(s,a),E=new r(s,f),S=new r(s,l),x=new r(s,c),T=new r(s,h),N=new r(s,p),C=new r(s,d),k=new r(s,v),L=new r(s,m),A=new r(s,g),O=e.getSimulationTexture(0),M=e.getSimulationTexture(1),_=e.getSimulationTexture(2),D=e.getSimulationTexture(3),P=e.getGridWidth(),H=e.getGridHeight(),B=e.getModelOptions(),j=B.timestep,F=B.thermal_buoyancy,I=B.buoyancy_approximation,q=B.background_viscosity,R=B.model_width/e.getGridWidth(),U=B.model_height/e.getGridHeight(),z=y,W=b,X=.5/R,V=.5/U,$=1/(R*R),J=1/(U*U),K=.5/($+J),Q=j*q*$,G=j*q*J,Y=1/(1+2*(Q+G)),Z=W*j,et=F*j,tt=[1/H,1/P],nt=[_],rt=[M,_],it=[O,M,_],st=[M,_,D],ot=function(){var e;e={data1_tex:0,data2_tex:1,grid:tt,tx:.5*j/R,ty:.5*j/U},t.uniforms(e),n.uniforms(e),e={data2_tex:0,grid:tt},w.uniforms(e),E.uniforms(e),e={data1_tex:0,data2_tex:1,grid:tt},S.uniforms(e),e={data1_tex:0,data2_tex:1,data3_tex:2,grid:tt},x.uniforms(e),e={data1_tex:0,data2_tex:1,grid:tt,i2dx:X,i2dy:V},N.uniforms(e),k.uniforms(e),e={data1_tex:0,data2_tex:1,grid:tt,s:K,idxsq:$,idysq:J},C.uniforms(e),e={data1_tex:0,data2_tex:1,grid:tt,hx:Q,hy:G,dn:Y},L.uniforms(e),e={data0_tex:0,data1_tex:1,data2_tex:2,grid:tt,g:Z,b:et},A.uniforms(e)},ut=function(){i.executeProgram(A,it,_)},at=function(){i.executeProgram(t,rt,_),i.executeProgram(w,nt,_),i.executeProgram(n,rt,_),i.executeProgram(w,nt,_)},ft=function(){var e;i.executeProgram(N,rt,_),i.executeProgram(E,nt,_),i.executeProgram(S,rt,_);for(e=0;e<z;e+=1)i.executeProgram(C,rt,_);i.executeProgram(k,rt,_),i.executeProgram(w,nt,_)},lt=function(){var e;i.executeProgram(T,nt,_);for(e=0;e<z;e+=1)i.executeProgram(L,rt,_),i.executeProgram(w,nt,_)},ct=function(){i.executeProgram(x,st,_)},ht=function(){i.executeProgram(T,nt,_)},pt={solve:function(){F!==0&&ut(),ct(),q>0&&(lt(),ft(),ct()),ht(),at(),ft(),ct(),i.tryFinish()}};return ot(),pt}}),n("energy2d/models/helpers",["require","exports","module"],function(e,t,n){"use strict";t.hypot=function(e,t){var n;return e=Math.abs(e),t=Math.abs(t),n=Math.min(e,t),e=Math.max(e,t),t=n,e*Math.sqrt(1+t/e*(t/e))}}),n("energy2d/models/shape",["require","exports","module"],function(e,t,n){"use strict";t.pointInsidePolygon=function(e,t,n,r,i){var s=0,o,u;for(o=0,u=e-1;o<e;u=o,o+=1)n[o]>i!=n[u]>i&&r<(t[u]-t[o])*(i-n[o])/(n[u]-n[o])+t[o]&&(s=!s);return!!s};var r=t.Line=function(e,t,n,r){this.x1=e,this.y1=t,this.x2=n,this.y2=r};r.prototype.intersectsLine=function(e){var t,n={x:this.x1,y:this.y1},r={x:this.x2,y:this.y2},i={x:e.x1,y:e.y1},s={x:e.x2,y:e.y2},o=(s.x-i.x)*(n.y-i.y)-(s.y-i.y)*(n.x-i.x),u=(r.x-n.x)*(n.y-i.y)-(r.y-n.y)*(n.x-i.x),a=(s.y-i.y)*(r.x-n.x)-(s.x-i.x)*(r.y-n.y),f,l;return a!==0?(f=o/a,l=u/a,0<=f&&f<=1&&0<=l&&l<=1?t=!0:t=!1):o===0||u===0?t=!0:t=!1,t};var i=t.Polygon=function(e,t,n){this.count=e,this.x_coords=t,this.y_coords=n};i.prototype.polygonize=function(){return this},i.prototype.contains=function(e,t){var n=this.x_coords,r=this.y_coords,i=this.count,s=0,o,u;for(o=0,u=i-1;o<i;u=o,o+=1)r[o]>t!=r[u]>t&&e<(n[u]-n[o])*(t-r[o])/(r[u]-r[o])+n[o]&&(s=!s);return!!s};var s=t.Rectangle=function(e,t,n,r){this.x=e,this.y=t,this.width=n,this.height=r,this.polygon_cache=undefined};s.prototype.polygonize=function(){var e,t,n,r;return this.polygon_cache||(e=this.x,t=this.y,n=this.width,r=this.height,this.polygon_cache=new i(4,[e,e+n,e+n,e],[t,t,t+r,t+r])),this.polygon_cache},s.prototype.contains=function(e,t){return e>=this.x&&e<=this.x+this.width&&t>=this.y&&t<=this.y+this.height};var o=function(e,t,n,r,s){var o=new Array(s),u=new Array(s),a=2*Math.PI/s,f,l;for(l=0;l<s;l+=1)f=a*l,o[l]=e+n*Math.cos(f),u[l]=t+r*Math.sin(f);return new i(s,o,u)},u=t.Ellipse=function(e,t,n,r){this.x=e,this.y=t,this.a=n,this.b=r,this.polygon_cache=undefined};u.prototype.POLYGON_SEGMENTS=50,u.prototype.polygonize=function(){return this.polygon_cache||(this.polygon_cache=o(this.x,this.y,this.a*.5,this.b*.5,this.POLYGON_SEGMENTS)),this.polygon_cache},u.prototype.contains=function(e,t){var n=e-this.x,r=t-this.y,i=this.a*.5,s=this.b*.5;return n*n/(i*i)+r*r/(s*s)<=1};var a=t.Ring=function(e,t,n,r){this.x=e,this.y=t,this.inner=n,this.outer=r,this.polygon_cache=undefined};a.prototype.POLYGON_SEGMENTS=50,a.prototype.polygonize=function(){return this.polygon_cache||(this.polygon_cache=o(this.x,this.y,this.outer*.5,this.outer*.5,this.POLYGON_SEGMENTS)),this.polygon_cache},a.prototype.polygonizeInner=function(){var e,t,n,r,i,s,u,a,f,l;return this.polygon_cache_inner||(this.polygon_cache_inner=o(this.x,this.y,this.inner*.5,this.inner*.5,this.POLYGON_SEGMENTS)),this.polygon_cache_inner},a.prototype.contains=function(e,t){var n=e-this.x,r=t-this.y,i=this.outer*.5,s=this.outer*.5,o=this.inner*.5,u=this.inner*.5;return n*n/(i*i)+r*r/(s*s)<=1&&n*n/(o*o)+r*r/(u*u)>=1}}),n("energy2d/models/photon",["require","exports","module","energy2d/models/helpers","energy2d/models/shape","energy2d/models/shape"],function(e,t,n){"use strict";var r=e("energy2d/models/helpers").hypot,i=e("energy2d/models/shape").Line,s=e("energy2d/models/shape").Rectangle,o=t.Photon=function(e,t,n,r,i){this.x=e,this.y=t,this.energy=n,this.c=r,i!==undefined&&(this.vx=Math.cos(i)*r,this.vy=Math.sin(i)*r)};o.prototype.isContained=function(e,t,n,r){return this.x>=e&&this.x<=t&&this.y>=n&&this.y<=r},o.prototype.move=function(e){this.x+=this.vx*e,this.y+=this.vy*e},o.prototype.reflectFromLine=function(e,t){var n=this.x,s=this.y,o=this.x-this.vx*t,u=this.y-this.vy*t,a=new i(n,s,o,u),f=this.vx,l=this.vy,c,h,p,d,v;return a.intersectsLine(e)?(n=e.x1,s=e.y1,o=e.x2,u=e.y2,c=1/r(n-o,s-u),h=(u-s)*c,p=(o-n)*c,d=f*p+l*h,v=l*p-f*h,this.vx=d*p+v*h,this.vy=d*h-v*p,!0):!1},o.prototype.reflectFromRectangle=function(e,t){var n=e.x,r=e.y,i=e.x+e.width,s=e.y+e.height,o,u;o=this.vx*t,this.x-o<n?this.vx=-Math.abs(this.vx):this.x-o>i&&(this.vx=Math.abs(this.vx)),u=this.vy*t,this.y-u<r?this.vy=-Math.abs(this.vy):this.y-u>s&&(this.vy=Math.abs(this.vy))},o.prototype.reflectFromPolygon=function(e,t){var n=new i,r,s;for(r=0,s=e.count-1;r<s;r+=1){n.x1=e.x_coords[r],n.y1=e.y_coords[r],n.x2=e.x_coords[r+1],n.y2=e.y_coords[r+1];if(this.reflectFromLine(n,t))return}n.x1=e.x_coords[e.count-1],n.y1=e.y_coords[e.count-1],n.x2=e.x_coords[0],n.y2=e.y_coords[0],this.reflectFromLine(n,t)},o.prototype.reflect=function(e,t){return e.contains(this.x,this.y)?(e instanceof s?this.reflectFromRectangle(e,t):this.reflectFromPolygon(e.polygonize(),t),!0):!1}}),n("energy2d/models/physics-solvers/ray-solver",["require","exports","module","energy2d/models/photon"],function(e,t,n){"use strict";var r=e("energy2d/models/photon").Photon;t.makeRaySolver=function(e){var t=e.getGridWidth(),n=e.getGridHeight(),i=e.getModelOptions(),s=i.model_width,o=i.model_height,u=i.timestep,a=Math.PI-i.sun_angle,f=i.solar_ray_count,l=i.solar_power_density,c=i.solar_power_density,h=i.solar_ray_speed,p=i.photon_emission_interval,d=i.model_width/e.getGridWidth(),v=i.model_height/e.getGridHeight(),m=e.getPowerArray(),g=e.getPartsArray(),y=e.getPhotonsArray(),b=t-1,w=n-1,E=t-2,S=n-2,x=function(){var e=0;while(e<y.length)y[e]===undefined?y.splice(e,1):e+=1},T=function(){var e,t,n;for(e=0,t=y.length;e<t;e+=1)y[e].isContained(0,s,0,o)||(y[e]=undefined);x()},N=function(e,t){var n,r,i;for(n=0,r=g.length;n<r;n+=1)if(g[n].contains(e,t))return!0;return!1},C=function(e,t){var n=Math.floor(s/e),i=Math.floor(o/t),u,f,l;if(a>=0&&a<.5*Math.PI){f=0;for(l=1;l<=n;l+=1)u=e*l,N(u,f)||y.push(new r(u,f,c,h,a));u=0;for(l=0;l<=i;l+=1)f=t*l,N(u,f)||y.push(new r(u,f,c,h,a))}else if(a<0&&a>=-0.5*Math.PI){f=o;for(l=1;l<=n;l+=1)u=e*l,N(u,f)||y.push(new r(u,f,c,h,a));u=0;for(l=0;l<=i;l+=1)f=o-t*l,N(u,f)||y.push(new r(u,f,c,h,a))}else if(a<Math.PI+.001&&a>=.5*Math.PI){f=0;for(l=0;l<=n;l+=1)u=s-e*l,N(u,f)||y.push(new r(u,f,c,h,a));u=s;for(l=1;l<=i;l+=1)f=t*l,N(u,f)||y.push(new r(u,f,c,h,a))}else if(a>=-Math.PI&&a<-0.5*Math.PI){f=o;for(l=0;l<=n;l+=1)u=s-e*l,N(u,f)||y.push(new 
r(u,f,c,h,a));u=s;for(l=1;l<=i;l+=1)f=o-t*l,N(u,f)||y.push(new r(u,f,c,h,a))}};return{solve:function(){var e=1/(u*p),t=1/d,r=1/v,i,s,o,a,f,l,c,h;for(f=0,c=y.length;f<c;f+=1){i=y[f],i.move(u);for(l=0,h=g.length;l<h;l+=1){s=g[l];if(s.reflect(i,u))break;if(s.absorb(i)){o=Math.max(Math.min(Math.round(i.x*t),b),0),a=Math.max(Math.min(Math.round(i.y*r),w),0),m[o*n+a]=i.energy*e,y[f]=undefined;break}}}x(),T()},radiate:function(){var t,n,r;for(n=0,r=g.length;n<r;n+=1)t=g[n],t.emissivity>0&&t.radiate(e)},sunShine:function(){var e,t,n;if(a<0)return;e=Math.abs(Math.sin(a)),t=Math.abs(Math.cos(a)),n=e*o<t*s?o/t:s/e,n/=f,C(n/e,n/t)}}}}),n("energy2d/models/constants",["require","exports","module"],function(e,t,n){"use strict";t.AIR_THERMAL_CONDUCTIVITY=.025,t.AIR_SPECIFIC_HEAT=1012,t.AIR_DENSITY=1.204,t.AIR_VISCOSITY=1568e-8,t.STEFAN_CONSTANT=5.67e-8}),n("energy2d/models/default-config",["require","exports","module","energy2d/models/constants"],function(e,t,n){"use strict";var r=e("energy2d/models/constants");t.DEFAULT_VALUES={model:{use_WebGL:!1,grid_width:100,grid_height:100,model_width:10,model_height:10,timestep:1,convective:!0,background_temperature:0,background_conductivity:r.AIR_THERMAL_CONDUCTIVITY,background_specific_heat:r.AIR_SPECIFIC_HEAT,background_density:r.AIR_DENSITY,background_viscosity:r.AIR_VISCOSITY,thermal_buoyancy:25e-5,buoyancy_approximation:1,boundary:{temperature_at_border:{upper:0,lower:0,left:0,right:0}},measurement_interval:500,viewupdate_interval:100,stoptime:undefined,sunny:!1,sun_angle:1.5707964,solar_power_density:2e3,solar_ray_count:24,solar_ray_speed:.1,photon_emission_interval:20,structure:undefined},part:{thermal_conductivity:1,specific_heat:1300,density:25,transmission:0,reflection:0,absorption:1,emissivity:0,temperature:0,constant_temperature:!1,power:0,wind_speed:0,wind_angle:0,visible:!0,filled:!0,color:"gray",label:undefined,texture:undefined,uid:undefined,draggable:!0}},t.fillWithDefaultValues=function(e,t){var n,r,i=function(e){return e===undefined?undefined:JSON.parse(JSON.stringify(e))};if(e===undefined)return i(t);r=i(e);for(n in t)t.hasOwnProperty(n)&&e[n]===undefined&&(r[n]=i(t[n]));return r}}),n("energy2d/models/part",["require","exports","module","energy2d/models/default-config","energy2d/models/constants","energy2d/models/helpers","energy2d/models/photon","energy2d/models/shape","energy2d/models/shape","energy2d/models/shape","energy2d/models/shape","energy2d/models/shape","energy2d/models/shape"],function(e,t,n){"use strict";var r=e("energy2d/models/default-config"),i=e("energy2d/models/constants"),s=e("energy2d/models/helpers").hypot,o=e("energy2d/models/photon").Photon,u=e("energy2d/models/shape"),a=e("energy2d/models/shape").Line,f=e("energy2d/models/shape").Polygon,l=e("energy2d/models/shape").Rectangle,c=e("energy2d/models/shape").Ellipse,h=e("energy2d/models/shape").Ring,p=.5,d=20,v=100,m=Math.sin(Math.PI/6),g=Math.cos(Math.PI/6),y=Math.sin(Math.PI/3),b=Math.cos(Math.PI/3),w=t.Part=function(e){var t,n,i;e=r.fillWithDefaultValues(e,r.DEFAULT_VALUES.part);if(e.rectangle)i=this.rectangle=e.rectangle,this.shape=new l(i.x,i.y,i.width,i.height);else if(e.ellipse)i=this.ellipse=e.ellipse,this.shape=new c(i.x,i.y,i.a,i.b);else if(e.ring)i=this.ring=e.ring,this.shape=new h(i.x,i.y,i.inner,i.outer);else{if(!e.polygon)throw new Error("Part: shape not defined.");this.polygon=e.polygon;if(typeof this.polygon.vertices=="string"){t=this.polygon.count,this.polygon.vertices=this.polygon.vertices.split(", "),this.polygon.x_coords=[],this.polygon.y_coords=[];if(t*2!==this.polygon.vertices.length)throw new Error("Part: polygon contains different vertices count than declared in the count parameter.");for(n=0;n<t;n+=1)this.polygon.x_coords[n]=this.polygon.vertices[2*n]=Number(this.polygon.vertices[2*n]),this.polygon.y_coords[n]=this.polygon.vertices[2*n+1]=Number(this.polygon.vertices[2*n+1]);this.shape=new f(t,this.polygon.x_coords,this.polygon.y_coords)}}this.thermal_conductivity=e.thermal_conductivity,this.specific_heat=e.specific_heat,this.density=e.density,this.temperature=e.temperature,this.constant_temperature=e.constant_temperature,this.power=e.power,this.wind_speed=e.wind_speed,this.wind_angle=e.wind_angle,this.transmission=e.transmission,this.reflection=e.reflection,this.absorption=e.absorption,this.emissivity=e.emissivity,this.visible=e.visible,this.filled=e.filled,this.color=e.color,this.texture=e.texture,this.label=e.label};w.prototype.getLabel=function(){var e=this.label,t;return e==="%temperature"?t=this.temperature+" °C":e==="%density"?t=this.density+" kg/m³":e==="%specific_heat"?t=this.specific_heat+" J/(kg×°C)":e==="%thermal_conductivity"?t=this.thermal_conductivity+" W/(m×°C)":e==="%power_density"?t=this.power+" W/m³":e==="%area"?this.rectangle?t=this.rectangle.width*this.rectangle.height+" m²":this.ellipse&&(t=this.ellipse.width*this.ellipse.height*.25*Math.PI+" m²"):e==="%width"?this.rectangle?t=this.rectangle.width+" m":this.ellipse&&(t=this.ellipse.width+" m"):e==="%height"?this.rectangle?t=this.rectangle.height+" m":this.ellipse&&(t=this.ellipse.height+" m"):t=e,t},w.prototype.getGridCells=function(e,t,n,r){var i=e-1,s=t-1,o=i/n,a=s/r,f=function(e){var n,r,u,f,l,c,h,p=[];u=Math.min(Math.max(Math.ceil(e.x*o),0),i),f=Math.min(Math.max(Math.ceil(e.y*a),0),s),l=Math.min(Math.max(Math.floor((e.x+e.width)*o),0),i),c=Math.min(Math.max(Math.floor((e.y+e.height)*a),0),s),p=new Array((l-u+1)*(c-f+1)),h=0;for(n=u;n<=l;n+=1)for(r=f;r<=c;r+=1)p[h+=1]=n*t+r;return p},l=function(e){var n=e.x*o,r=e.y*a,u=e.a*.5*o,f=e.b*.5*a,l,c,h,p,d,v,m,g,y=[];h=Math.min(Math.max(Math.ceil(n-u),0),i),p=Math.min(Math.max(Math.floor(n+u),0),i),y=[],g=0;for(c=h;c<=p;c+=1){l=Math.sqrt(1-(c-n)*(c-n)/(u*u)),v=Math.min(Math.max(Math.ceil(r-f*l),0),s),m=Math.min(Math.max(Math.floor(r+f*l),0),s);for(d=v;d<=m;d+=1)y[g+=1]=c*t+d}return y},c=function(e){var n=e.x*o,r=e.y*a,u=e.outer*.5*o,f=e.outer*.5*a,l=e.inner*.5*o,c=e.inner*.5*a,h,p,d,v,m,g,y,b,w,E,S=[];p=Math.min(Math.max(Math.ceil(n-u),0),i),d=Math.min(Math.max(Math.floor(n+u),0),i);for(h=p;h<=d;h+=1){w=Math.sqrt(1-(h-n)*(h-n)/(u*u)),m=Math.min(Math.max(Math.ceil(r-f*w),0),s),b=Math.min(Math.max(Math.floor(r+f*w),0),s);if(Math.abs(h-n)<l){w=Math.sqrt(1-(h-n)*(h-n)/(l*l)),g=Math.min(Math.max(Math.ceil(r-c*w),0),s),y=Math.min(Math.max(Math.floor(r+c*w),0),s);for(v=m;v<=g;v+=1)S[E+=1]=h*t+v;for(v=y;v<=b;v+=1)S[E+=1]=h*t+v}else for(v=m;v<=b;v+=1)S[E+=1]=h*t+v}return S},h=function(e){var n=e.count,r=e.vertices,f=new Array(n),l=new Array(n),c=Number.MAX_VALUE,h=Number.MIN_VALUE,p=Number.MAX_VALUE,d=Number.MIN_VALUE,v,m,g,y,b,w,E,S=[];for(v=0;v<n;v+=1)f[v]=r[v*2]*o,l[v]=r[v*2+1]*a,f[v]<c&&(c=f[v]),f[v]>h&&(h=f[v]),l[v]<p&&(p=l[v]),l[v]>d&&(d=l[v]);m=Math.min(Math.max(Math.round(c),0),i),b=Math.min(Math.max(Math.round(p),0),s),g=Math.min(Math.max(Math.round(h),0),i),w=Math.min(Math.max(Math.round(d),0),s),S=[],E=0;for(v=m;v<=g;v+=1)for(y=b;y<=w;y+=1)u.pointInsidePolygon(n,f,l,v,y)&&(S[E+=1]=v*t+y);return S};if(this.rectangle)return f(this.rectangle);if(this.ellipse)return l(this.ellipse);if(this.ring)return c(this.ring);if(this.polygon)return h(this.polygon);throw new Error("Part: unknown shape.")},w.prototype.contains=function(e,t){return this.shape.contains(e,t)},w.prototype.reflect=function(e,t){return Math.abs(this.reflection-1)<.001?e.reflect(this.shape,t):!1},w.prototype.absorb=function(e){return Math.abs(this.absorption-1)<.001?this.shape.contains(e.x,e.y):!1},w.prototype.getIrradiance=function(e){var t;return this.emissivity===0?0:(t=273+e,t*=t,this.emissivity*i.STEFAN_CONSTANT*v*t*t)},w.prototype.radiate=function(e){var t=this.shape.polygonize(),n=new a,r,i;if(this.emissivity===0)return;for(r=0,i=t.count-1;r<i;r+=1)n.x1=t.x_coords[r],n.y1=t.y_coords[r],n.x2=t.x_coords[r+1],n.y2=t.y_coords[r+1],this.radiateFromLine(e,n);n.x1=t.x_coords[t.count-1],n.y1=t.y_coords[t.count-1],n.x2=t.x_coords[0],n.y2=t.y_coords[0],this.radiateFromLine(e,n)},w.prototype.radiateFromLine=function(e,t){var n,r,i,u,a,f,l,c,h,v,w,E,S,x,T,N,C;if(this.emissivity===0)return;n=e.getModelOptions(),r=s(t.x1-t.x2,t.y1-t.y2),i=(t.x2-t.x1)/r,u=(t.y2-t.y1)/r,a=Math.max(1,Math.round(r/p)),v=n.solar_ray_speed*u,w=-n.solar_ray_speed*i;if(a===1)h=.5*r,f=t.x1+h*i,l=t.y1+h*u,h=e.getAverageTemperatureAt(f,l),h>d&&(h=e.getTemperatureAt(f,l),c=new o(f,l,this.getIrradiance(h),n.solar_ray_speed),c.vx=v,c.vy=w,e.addPhoton(c),this.constant_temperature||e.setTemperatureAt(f,l,h-c.energy/this.specific_heat));else{E=new Array(4),S=new Array(4),E[0]=v*g-w*m,S[0]=v*m+w*g,E[1]=w*m+v*g,S[1]=w*g-v*m,E[2]=v*b-w*y,S[2]=v*y+w*b,E[3]=w*y+v*b,S[3]=w*b-v*y,x=1+E.length;for(N=0;N<a;N+=1){h=(N+.5)*p,f=t.x1+h*i,l=t.y1+h*u,h=e.getAverageTemperatureAt(f,l),T=this.getIrradiance(h)/x;if(h>d){c=new o(f,l,T,n.solar_ray_speed),c.vx=v,c.vy=w,e.addPhoton(c);for(C=0;C<x-1;C+=1)c=new o(f,l,T,n.solar_ray_speed),c.vx=E[C],c.vy=S[C],e.addPhoton(c);this.constant_temperature||e.changeAverageTemperatureAt(f,l,-T*x/this.specific_heat)}}}}}),n("energy2d/models/core-model",["require","exports","module","common/console","arrays","energy2d/models/physics-solvers/heat-solver","energy2d/models/physics-solvers-gpu/heat-solver-gpu","energy2d/models/physics-solvers/fluid-solver","energy2d/models/physics-solvers-gpu/fluid-solver-gpu","energy2d/models/physics-solvers/ray-solver","energy2d/models/part","energy2d/models/default-config","energy2d/gpu/gpgpu"],function(e,t,n){"use strict";var r=e("common/console"),i=e("arrays"),s=e("energy2d/models/physics-solvers/heat-solver"),o=e("energy2d/models/physics-solvers-gpu/heat-solver-gpu"),u=e("energy2d/models/physics-solvers/fluid-solver"),a=e("energy2d/models/physics-solvers-gpu/fluid-solver-gpu"),f=e("energy2d/models/physics-solvers/ray-solver"),l=e("energy2d/models/part"),c=e("energy2d/models/default-config"),h=e("energy2d/gpu/gpgpu"),p=function(){try{new Float32Array}catch(e){return"regular"}return"Float32Array"}();t.makeCoreModel=function(e){var t=function(){var t;e=c.fillWithDefaultValues(e,c.DEFAULT_VALUES.model),t=e.boundary.temperature_at_border||e.boundary.flux_at_border;if(!t)throw new Error("Core model: missing boundary settings.");if(t.upper===undefined||t.right===undefined||t.lower===undefined||t.left===undefined)throw new Error("Core model: incomplete boundary settings.");return e}(),n=t.use_WebGL,d,v=t.grid_width,m=t.grid_height,g=v*m,y=t.model_width/v,b=t.model_height/m,w=0,E,S,x,T,N,C,k,L={start:function(){},stop:function(){},startFPS:function(){},updateFPS:function(){},stopFPS:function(){}},A=i.create(g,t.background_temperature,p),O=i.create(g,NaN,p),M=i.create(g,0,p),_=i.create(g,0,p),D=i.create(g,0,p),P=i.create(g,0,p),H=i.create(g,0,p),B=i.create(g,t.background_conductivity,p),j=i.create(g,t.background_specific_heat,p),F=i.create(g,t.background_density,p),I=i.create(g,!0,p),q=[],R=[],U=function(){var e=[],n,r,i;if(t.structure&&t.structure.part){n=t.structure.part,n.constructor!==Array&&(n=[n]),e=new Array(n.length);for(r=0,i=n.length;r<i;r+=1)e[r]=new l.Part(n[r])}return e}(),z=function(){if(typeof window=="undefined")throw new Error("Core model: WebGL GPGPU unavailable in the node.js environment.");try{h.init(m,v)}catch(e){n=!1,d=e.message,r.warn("WebGL initialization failed. Energy2D will use CPU solvers.");return}R[0]=h.createTexture(),R[1]=h.createTexture(),R[2]=h.createTexture(),R[3]=h.createTexture(),h.writeRGBATexture(R[0],A,A,O,B),h.writeRGBATexture(R[1],D,j,F,I),h.writeRGBATexture(R[2],M,_,M,_),h.writeRGBATexture(R[3],P,H,P,H),T=o.makeHeatSolverGPU(V),N=a.makeFluidSolverGPU(V)},W=function(){var e=t.model_width,n=t.model_height,r,i,s,o,u,a;if(!U||U.length===0)return;for(o=U.length-1;o>=0;o-=1){r=U[o],i=r.getGridCells(v,m,e,n);for(u=0,a=i.length;u<a;u+=1)s=i[u],I[s]=!1,A[s]=r.temperature,D[s]=r.power,B[s]=r.thermal_conductivity,j[s]=r.specific_heat,F[s]=r.density,r.wind_speed!==0&&(P[s]=r.wind_speed*Math.cos(r.wind_angle),H[s]=r.wind_speed*Math.sin(r.wind_angle)),r.constant_temperature&&(O[s]=r.temperature)}},X=function(){var e,t,n,r,i,s,o,u;for(r=0;r<v;r+=1){t=r*y,i=r*m;for(s=0;s<m;s+=1){n=s*b,D[i+s]=0;if(k)for(o=0,u=U.length;o<u;o+=1){e=U[o];if(e.power!==0&&e.shape.contains(t,n)){D[i+s]=e.getPower();break}}}}},V={nextStep:function(){L.start("Core model step"),n?(t.convective&&(L.start("Fluid solver GPU"),N.solve(),L.stop("Fluid solver GPU")),L.start("Heat solver GPU"),T.solve(t.convective),L.stop("Heat solver GPU")):(C&&(L.start("Ray solver CPU"),w%t.photon_emission_interval===0&&(X(),t.sunny&&x.sunShine(),x.radiate()),x.solve(),L.stop("Ray solver CPU")),t.convective&&(L.start("Fluid solver CPU"),S.solve(M,_),L.stop("Fluid solver CPU")),L.start("Heat solver CPU"),E.solve(t.convective,A,D),L.stop("Heat solver CPU")),w+=1,L.stop("Core model step")},setPerformanceTools:function(e){L=e},isWebGLActive:function(){return n},getWebGLError:function(){return d},updateTemperatureArray:function(){n&&(L.start("Read temperature texture"),h.readTexture(R[0],A),L.stop("Read temperature texture"))},updateVelocityArrays:function(){n&&(L.start("Read velocity texture"),h.readTexture(R[2],M,0),h.readTexture(R[2],_,1),L.stop("Read velocity texture"))},getIndexOfStep:function(){return w},getModelOptions:function(){return t},getTemperatureAt:function(e,t){var n=Math.max(Math.min(v-1,Math.round(e/y)),0),r=Math.max(Math.min(m-1,Math.round(t/b)),0);return A[n*m+r]},setTemperatureAt:function(e,t,n){var r=Math.max(Math.min(v-1,Math.round(e/y)),0),i=Math.max(Math.min(m-1,Math.round(t/b)),0);A[r*m+i]=n},getAverageTemperatureAt:function(e,t){var n=0,r=v-1,i=m-1,s=Math.round(e/y),o=Math.round(t/b),u,a;return u=Math.max(Math.min(r,s),0),a=Math.max(Math.min(i,o),0),n+=A[u*m+a],u=Math.max(Math.min(r,s+1),0),a=Math.max(Math.min(i,o),0),n+=A[u*m+a],u=Math.max(Math.min(r,s-1),0),a=Math.max(Math.min(i,o),0),n+=A[u*m+a],u=Math.max(Math.min(r,s),0),a=Math.max(Math.min(i,o+1),0),n+=A[u*m+a],u=Math.max(Math.min(r,s),0),a=Math.max(Math.min(i,o-1),0),n+=A[u*m+a],n*.2},changeAverageTemperatureAt:function(e,t,n){var r=v-1,i=m-1,s=Math.round(e/y),o=Math.round(t/b),u,a;n*=.2,u=Math.min(r,s),a=Math.min(i,o),u>=0&&a>=0&&(A[u*m+a]+=n),u=Math.min(r,s+1),a=Math.min(i,o),u>=0&&a>=0&&(A[u*m+a]+=n),u=Math.min(r,s-1),a=Math.min(i,o),u>=0&&a>=0&&(A[u*m+a]+=n),u=Math.min(r,s),a=Math.min(i,o+1),u>=0&&a>=0&&(A[u*m+a]+=n),u=Math.min(r,s),a=Math.min(i,o-1),u>=0&&a>=0&&(A[u*m+a]+=n)},addPhoton:function(e){q.push(e)},removePhoton:function(e){var t=q.indexOf(e);t!==-1&&q.splice(t,1)},copyTextureToArray:function(e,t){h.readTexture(e,t)},copyArrayToTexture:function(e,t){h.writeTexture(t,e)},getArrayType:function(){return p},getGridWidth:function(){return v},getGridHeight:function(){return m},getPerformanceModel:function(){return L},getTemperatureArray:function(){return A},getUVelocityArray:function(){return M},getVVelocityArray:function(){return _},getUWindArray:function(){return P},getVWindArray:function(){return H},getBoundaryTemperatureArray:function(){return O},getPowerArray:function(){return D},getConductivityArray:function(){return B},getCapacityArray:function(){return j},getDensityArray:function(){return F},getFluidityArray:function(){return I},getPhotonsArray:function(){return q},getPartsArray:function(){return U},getTemperatureTexture:function(){return R[0]},getVelocityTexture:function(){return R[2]},getSimulationTexture:function(e){return R[e]}};return C=function(){var e,n;if(t.sunny)return!0;for(e=0,n=U.length;e<n;e+=1)if(U[e].emissivity>0)return!0;return!1}(),k=function(){var e,t;for(e=0,t=U.length;e<t;e+=1)if(U[e].power>0)return!0;return!1}(),W(),E=s.makeHeatSolver(V),S=u.makeFluidSolver(V),x=f.makeRaySolver(V),n&&z(),V}}),n("energy2d/modeler",["require","energy2d/models/core-model"],function(e){"use strict";var t=e("energy2d/models/core-model");return function(n){var r=t.makeCoreModel(n);return{nextStep:function(){r.nextStep()},getWidth:function(){return r.getModelOptions().model_width},getHeight:function(){return r.getModelOptions().model_height},getTime:function(){return r.getModelOptions().timestep*r.getIndexOfStep()},isWebGLActive:r.isWebGLActive,getWebGLError:r.getWebGLError,getIndexOfStep:r.getIndexOfStep,getGridWidth:r.getGridWidth,getGridHeight:r.getGridHeight,getTemperatureArray:r.getTemperatureArray,getTemperatureTexture:r.getTemperatureTexture,getUVelocityArray:r.getUVelocityArray,getVVelocityArray:r.getVVelocityArray,getVelocityTexture:r.getVelocityTexture,getPhotonsArray:r.getPhotonsArray,getPartsArray:r.getPartsArray,updateTemperatureArray:r.updateTemperatureArray,updateVelocityArrays:r.updateVelocityArrays,setPerformanceTools:r.setPerformanceTools}}}),n("energy2d/utils/performance-monitor",[],function(){"use strict";return function(){var t={id:undefined,data:undefined,parent:undefined,children:{}},n=t,r={},i=function(e){return n.children[e]||(n.children[e]={id:e,data:{sum:0,count:0,avg:0},parent:n,children:{}}),n=n.children[e],n};return{start:function(e){i(e),n.start_time=(new Date).getTime()},stop:function(e){var t=(new Date).getTime();if(n.id!==e)throw new Error("Performance: there is another active counter: "+n.name);n.data.sum+=t-n.start_time,n.data.count+=1,n.data.avg=n.data.sum/n.data.count,n=n.parent},startFPS:function(e){r[e]={start_time:(new Date).getTime(),count:0,fps:0}},updateFPS:function(e){var t=r[e],n=(new Date).getTime();if(!t)return;t.count+=1,t.fps=t.count/((n-t.start_time)/1e3)},stopFPS:function(e){delete r[e]},getTree:function(){return t},getFPSData:function(){return r}}}}),n("energy2d/views/performance",[],function(){"use strict";return function(t){var n="energy2d-performance",r="energy2d-performance",i,s,o,u,a=function(){i=$("<div />"),o=$("<pre />"),s=$("<pre />"),i.append("<h2>FPS Counters:</h2>"),i.append(o),i.append("<h2>Stats (average time):</h2>"),i.append(s)},f=function(e,t){var n,r,i;for(n in e)if(e.hasOwnProperty(n)){r=e[n];for(i=0;i<t;i+=1)s.append("  ");s.append(r.id+": "+r.data.avg.toFixed(2)+"ms\n"),f(r.children,t+1)}},l=function(e){s.html(""),f(e.children,0)},c=function(e){var t;o.html("");for(t in e)e.hasOwnProperty(t)&&o.append(t+": "+e[t].fps.toFixed(2)+" fps")},h={bindModel:function(e){u=e},update:function(){c(u.getFPSData()),l(u.getTree())},getHTMLElement:function(){return i}};return a(),h}}),n("energy2d/views/helpers",[],function(){"use strict";return{HSVToRGB:function(e,t,n){var r,i,s,o,u,a,f,l;e=Math.max(0,Math.min(360,e)),t=Math.max(0,Math.min(100,t)),n=Math.max(0,Math.min(100,n)),t/=100,n/=100;if(t===0)return r=i=s=n,[Math.round(r*255),Math.round(i*255),Math.round(s*255)];e/=60,o=Math.floor(e),u=e-o,a=n*(1-t),f=n*(1-t*u),l=n*(1-t*(1-u));switch(o){case 0:r=n,i=l,s=a;break;case 1:r=f,i=n,s=a;break;case 2:r=a,i=n,s=l;break;case 3:r=a,i=f,s=n;break;case 4:r=l,i=a,s=n;break;default:r=n,i=a,s=f}return[Math.round(r*255),Math.round(i*255),Math.round(s*255)]}}}),n("energy2d/views/color-palette",["require","energy2d/views/helpers"],function(e){"use strict";var t=e("energy2d/views/helpers"),n,r;return n={},n[0]=n.RAINBOW=[[0,0,128],[20,50,120],[20,100,200],[10,150,150],[120,180,50],[220,200,10],[240,160,36],[225,50,50],[230,85,110],[250,250,250],[255,255,255]],n[1]=n.IRON=[[40,20,100],[80,20,150],[150,20,150],[200,50,120],[220,80,80],[230,120,30],[240,200,20],[240,220,80],[255,255,125],[250,250,250],[255,255,255]],n[2]=n.GRAY=[[50,50,50],[75,75,75],[100,100,100],[125,125,125],[150,150,150],[175,175,175],[200,200,200],[225,225,225],[250,250,250],[255,255,255]],n[3]=n.RAINBOW2=function(){var e=t.HSVToRGB,n=256,r=new Array(n),i;for(i=0;i<n;i+=1)r[i]=t.HSVToRGB(n-1-i,100,90);return r}(),r=function(e){if(e===undefined||e==="DEFAULT")e="RAINBOW";this.color_palette_id=e},r.prototype.getRGBArray=function(){if(n[this.color_palette_id]!==undefined)return n[this.color_palette_id]},r}),n("energy2d/views/heatmap",["require","energy2d/views/color-palette"],function(e){"use strict";var t=e("energy2d/views/color-palette");return function(n){var r="energy2d-heatmap-view",i,s,o,u,a,f,l,c,h,p,d,v=0,m=50,g=function(){i=$("<canvas />"),i.attr("id",n||r),s=i[0].getContext("2d"),window.devicePixelRatio>1&&(s.webkitBackingStorePixelRatio>1||typeof s.webkitBackingStorePixelRatio=="undefined")?o=window.devicePixelRatio:o=1},y={renderHeatmap:function(){var e,t,n,r,i,u,a,f,g,y,b,w;if(!h)throw new Error("Heatmap: bind heatmap before rendering.");s.clearRect(0,0,p,d),s.fillStyle="rgb(0,0,0)",e=c/(m-v),u=s.getImageData(0,0,p/o,d/o),a=u.data,b=0,w=4*p;for(f=0;f<p;f+=1){y=f*d,b=4*f;for(g=0;g<d;g+=1)n=e*(h[y+g]-v),t=Math.floor(n),n-=t,t<0?(t=0,n=0):t>c-1&&(t=c-1,n=1),r=l[t],i=l[t+1],a[b]=r[0]*(1-n)+i[0]*n,a[b+1]=r[1]*(1-n)+i[1]*n,a[b+2]=r[2]*(1-n)+i[2]*n,a[b+3]=255,b+=w}s.putImageData(u,0,0)},bindHeatmap:function(e,t,n){if(t*n!==e.length)throw new Error("Heatmap: provided heatmap has wrong dimensions.");h=e,p=t,d=n,this.setCanvasSize(p,d)},getHTMLElement:function(){return i},updateCanvasSize:function(){u=i.width(),a=i.height(),f?(i.attr("width",u),i.attr("height",a)):this.setCanvasSize(p,d)},setCanvasSize:function(e,t){i.attr("width",e/o),i.attr("height",t/o)},setHQRenderingEnabled:function(e){f=e,this.updateCanvasSize()},setMinTemperature:function(e){v=e},setMaxTemperature:function(e){m=e},setColorPalette:function(e){l=(new t(e)).getRGBArray(),c=l.length-1}};return y.setColorPalette("DEFAULT"),g(),y}}),n("text!energy2d/views/heatmap-webgl-glsl/basic.vs.glsl",[],function(){return"varying vec2 coord;\n\nvoid main() {\n  coord = gl_TexCoord.xy;\n  gl_Position = vec4(gl_Vertex.xyz, 1.0);\n}\n"}),n("text!energy2d/views/heatmap-webgl-glsl/temp-renderer.fs.glsl",[],function(){return"// Provided textur contains temperature data in R channel.\nuniform sampler2D heatmap_tex;\nuniform sampler2D palette_tex;\n\nuniform float max_temp;\nuniform float min_temp;\n\nvarying vec2 coord;\n\nvoid main() {\n  float temp = texture2D(heatmap_tex, coord).r;\n  float scaled_temp = (temp - min_temp) / (max_temp - min_temp);\n  gl_FragColor = texture2D(palette_tex, vec2(scaled_temp, 0.5));\n}\n"}),n("energy2d/views/heatmap-webgl",["require","energy2d/gpu/context","energy2d/gpu/texture","energy2d/gpu/shader","energy2d/gpu/mesh","energy2d/views/color-palette","text!energy2d/views/heatmap-webgl-glsl/basic.vs.glsl","text!energy2d/views/heatmap-webgl-glsl/temp-renderer.fs.glsl"],function(e){"use strict";var t=e("energy2d/gpu/context"),n=e("energy2d/gpu/texture"),r=e("energy2d/gpu/shader"),i=e("energy2d/gpu/mesh"),s=e("energy2d/views/color-palette"),o=e("text!energy2d/views/heatmap-webgl-glsl/basic.vs.glsl"),u=e("text!energy2d/views/heatmap-webgl-glsl/temp-renderer.fs.glsl");return function(a){var f=t.getWebGLContext(),l=new r(o,u),c=i.plane({coords:!0}),h,p="energy2d-heatmap-webgl-view",d,v,m,g,y=0,b=50,w=function(){d=$(f.canvas),d.attr("id",a||p)},E=function(){f.bindFramebuffer(f.FRAMEBUFFER,null),f.viewport(0,0,v,m)},S={renderHeatmap:function(){if(!g)throw new Error("Heatmap: bind heatmap texture before rendering.");(v!==d.width()||m!==d.height())&&this.updateCanvasSize(),E(),f.clear(f.COLOR_BUFFER_BIT),g.bind(0),h.bind(1),l.draw(c),h.unbind(1),g.unbind(0)},updateCanvasSize:function(){v=d.width(),m=d.height(),d.attr("width",v),d.attr("height",m)},bindHeatmapTexture:function(e){g=e},getHTMLElement:function(){return d},setMinTemperature:function(e){y=e,l.uniforms({min_temp:y})},setMaxTemperature:function(e){b=e,l.uniforms({max_temp:b})},setColorPalette:function(e){var t,r,i,o,u;t=(new s(e)).getRGBArray(),r=t.length,i=new Uint8Array(r*4);for(o=0;o<r;o+=1)u=o*4,i[u]=t[o][0],i[u+1]=t[o][1],i[u+2]=t[o][2],i[u+3]=255;h=new n(r,1,{type:f.UNSIGNED_BYTE,format:f.RGBA,filter:f.LINEAR}),f.bindTexture(f.TEXTURE_2D,h.id),f.texImage2D(f.TEXTURE_2D,0,h.format,r,1,0,h.format,h.type,i)}};return S.setColorPalette("DEFAULT"),l.uniforms({heatmap_tex:0,palette_tex:1,min_temp:y,max_temp:b}),c.coords=[[1,0],[1,1],[0,0],[0,1]],c.compile(),w(),S}}),n("energy2d/views/vectormap",[],function(){"use strict";return function(t){var n="energy2d-vectormap-view",r=100,i=8,s=Math.cos(.523598776),o=Math.sin(.523598776),u=4,a="rgb(175,175,175)",f,l,c,h,p,d,v,m,g,y=function(){f=$("<canvas />"),f.attr("id",t||n),l=f[0].getContext("2d")},b=function(e,t,n,a){var f=1/Math.sqrt(n*n+a*a),c=n*f,h=a*f,p=e+c*i+n*r,d=t+h*i+a*r,v=u*(c*s+h*o),m=u*(h*s-c*o);l.beginPath(),l.moveTo(e,t),l.lineTo(p,d),l.lineTo(p-v,d-m),l.moveTo(p,d),v=u*(c*s-h*o),m=u*(h*s+c*o),l.lineTo(p-v,d-m),l.stroke()},w={renderVectormap:function(){var e,t,n,r,i,s,o,u,y,w;if(!p||!d)throw new Error("Vectormap: bind vectormap before rendering.");(c!==f.width()||h!==f.height())&&this.updateCanvasSize(),e=c/v,t=h/m,l.clearRect(0,0,c,h),l.strokeStyle=a,l.lineWidth=1;for(o=1;o<v-1;o+=g){y=o*m,n=(o+.5)*e;for(u=1;u<m-1;u+=g)w=y+u,r=(u+.5)*t,i=p[w],s=d[w],i*i+s*s>1e-15&&b(n,r,i,s)}},bindVectormap:function(e,t,n,r,i){if(n*r!==e.length)throw new Error("Heatmap: provided U component of vectormap has wrong dimensions.");if(n*r!==t.length)throw new Error("Heatmap: provided V component of vectormap has wrong dimensions.");p=e,d=t,v=n,m=r,g=Math.round(n/i)},getHTMLElement:function(){return f},updateCanvasSize:function(){c=f.width(),h=f.height(),f.attr("width",c),f.attr("height",h)}};return y(),w}}),n("text!energy2d/views/vectormap-webgl-glsl/vectormap.vs.glsl",[],function(){return"// Provided texture contains vector data in RG channels.\nattribute vec2 origin;\n\nuniform sampler2D vectormap_tex;\nuniform float base_length;\nuniform float vector_scale;\nuniform vec2 scale;\n\nvoid main() {\n  // Read vector which should be visualized.\n  vec2 vec = texture2D(vectormap_tex, gl_TexCoord.xy).xy;\n  vec.y = -vec.y;\n\n  if (length(vec) < 1e-15) {\n    // Do not draw to small vectors.\n    // Set position outside [-1, 1] region, which is rendered.\n    gl_Position = vec4(2.0);\n    return;\n  }\n\n  // Test which part of the vector arrow is being processed. \n  if (gl_Vertex.x == 0.0 && gl_Vertex.y == 0.0) {\n    // Origin of the arrow is being processed.\n    // Just transform its coordinates.\n    gl_Position = vec4(origin, 0.0, 1.0);\n  } else {\n    // Other parts of arrow are being processed.\n    // Set proper length of the arrow, rotate it, scale\n    // and finally transform.\n\n    // Calculate arrow length.\n    vec2 new_pos = gl_Vertex.xy;\n    new_pos.x += base_length + vector_scale * length(vec);\n\n    // Calculate angle between reference arrow (horizontal).\n    vec = normalize(vec);\n    float angle = acos(dot(vec, vec2(1.0, 0.0)));\n    if (vec.y < 0.0) {\n      angle = -angle;\n    }\n    // Prepare rotation matrix.\n    // See: http://en.wikipedia.org/wiki/Rotation_matrix\n    mat2 rot_m = mat2(\n      cos(angle), sin(angle),\n     -sin(angle), cos(angle)\n    );\n    // Rotate.\n    new_pos = rot_m * new_pos;\n    // Scale.\n    new_pos = new_pos * scale;\n    // Transform.\n    gl_Position = vec4(new_pos + origin, 0.0, 1.0);\n  }\n}\n"}),n("text!energy2d/views/vectormap-webgl-glsl/vectormap.fs.glsl",[],function(){return"uniform vec4 color;\n\nvoid main() {\n  gl_FragColor = color;\n}\n"}),n("energy2d/views/vectormap-webgl",["require","energy2d/gpu/context","energy2d/gpu/shader","energy2d/gpu/mesh","text!energy2d/views/vectormap-webgl-glsl/vectormap.vs.glsl","text!energy2d/views/vectormap-webgl-glsl/vectormap.fs.glsl"],function(e){"use strict";var t=e("energy2d/gpu/context"),n=e("energy2d/gpu/shader"),r=e("energy2d/gpu/mesh"),i=e("text!energy2d/views/vectormap-webgl-glsl/vectormap.vs.glsl"),s=e("text!energy2d/views/vectormap-webgl-glsl/vectormap.fs.glsl");return function(o){var u=t.getWebGLContext(),a=new n(i,s),f=new r({coords:!0,lines:!0}),l="energy2d-vectormap-webgl-view",c=100,h=8,p=[.7,.7,.7,1],d,v,m,g,y,b,w,E=function(){var e,t,n,r,i,s,o=2/y,u=2/b,a=1/y,l=1/b;f.addVertexBuffer("origins","origin"),f.vertices=[],f.origins=[],f.coords=[],f.lines=[],r=0;for(e=1;e<y-1;e+=w)for(t=1;t<b-1;t+=w)f.vertices.push([0,0,0],[.01,0,0],[-3,2,0],[-3,-2,0]),i=[-1+(e+.5)*o,1-(t+.5)*u,0],f.origins.push(i,i,i,i),s=[(t+.5)*l,(e+.5)*a],f.coords.push(s,s,s,s),f.lines.push([r,r+1],[r+1,r+2],[r+1,r+3]),r+=4;f.compile()},S=function(){d=$(u.canvas),d.attr("id",o||l)},x=function(){u.bindFramebuffer(u.FRAMEBUFFER,null),u.viewport(0,0,v,m)},T={renderVectormap:function(){if(!g)throw new Error("Vectormap: bind heatmap texture before rendering.");(v!==d.width()||m!==d.height())&&this.updateCanvasSize(),x(),g.bind(0),a.draw(f,u.LINES),g.unbind(0)},updateCanvasSize:function(){v=d.width(),m=d.height(),d.attr("width",v),d.attr("height",m),a.uniforms({scale:[2/v,2/m]})},bindVectormapTexture:function(e,t,n,r){g=e,y=t,b=n,w=Math.round(y/r),E()},getHTMLElement:function(){return d}};return a.uniforms({vectormap_tex:0,base_length:h,vector_scale:c,color:p}),S(),T}}),n("energy2d/views/parts",[],function(){"use strict";return function(t){var n="energy2d-parts-view",r="energy2d-parts-view",i,s,o,u,a,f,l,c,h,p=[],d=function(){i=$("<canvas />"),i.attr("id",t||n),i.addClass(r),s=i[0].getContext("2d")},v=function(){s.strokeStyle="black",s.lineCap="round",s.lineJoin="round",s.lineWidth=1,s.font="12px sans-serif",s.textBaseline="middle"},m=function(){var e=8,t=8,n,r;n=$("<canvas />"),n.attr("width",e),n.attr("height",t),r=n[0].getContext("2d"),r.clearRect(0,0,e,t),r.strokeStyle="black",r.beginPath(),r.moveTo(0,0),r.lineTo(t,t),r.stroke(),p.push(n[0])},g=function(e){var t=e.x*f-1,n=e.y*l-1,r=e.width*f+2,i=e.height*l+2,o=t+.5*r,u=n+.5*i;s.beginPath(),s.moveTo(t,n),s.lineTo(t+r,n),s.lineTo(t+r,n+i),s.lineTo(t,n+i),s.lineTo(t,n),s.closePath()},y=function(e){var t=e.x_coords,n=e.y_coords,r=0,i=0,o,u;s.beginPath(),s.moveTo(t[0]*f,n[0]*l);for(o=1,u=e.count;o<u;o+=1)s.lineTo(t[o]*f,n[o]*l);s.closePath()},b=function(e){var t,n,r,i,o,u,a;if(e.rectangle)n=e.rectangle.x+.5*e.rectangle.width,r=e.rectangle.y+.5*e.rectangle.height;else if(e.ellipse)n=e.ellipse.x,r=e.ellipse.y;else if(e.ring)n=e.ring.x,r=e.ring.y;else if(e.polygon){o=e.polygon.vertices,n=r=0;for(u=0,a=e.polygon.count;u<a;u+=1)n+=o[u*2],r+=o[u*2+1];n/=a,r/=a}n*=f,r*=l,s.fillStyle="white",t=e.getLabel(),i=s.measureText(t).width,s.fillText(t,n-.5*i,r)},w=function(e){var t="gray",n;if(e.color)if(typeof e.color=="string")n=e.color;else{n=e.color.toString();while(n.length<6)n="0"+n}else e.power>0?n="FFFF00":e.power<0?n="B0C4DE":e.constant_temperature?n="rgba(0, 0, 0, 0.0)":n=t;return n},E={renderParts:function(){var e,t,n,r;if(!a)throw new Error("Parts view: bind parts array before rendering.");(o!==i.width()||u!==i.height())&&this.updateCanvasSize(),s.clearRect(0,0,o,u);for(n=0,r=a.length;n<r;n+=1){e=a[n];if(!e.visible)continue;y(e.shape.polygonize()),e.rectangle?g(e.shape):y(e.shape.polygonize()),e.filled&&(s.fillStyle=w(e),s.fill()),e.texture&&(s.fillStyle=s.createPattern(p[0],"repeat"),s.fill()),s.stroke(),e.ring&&(y(e.shape.polygonizeInner()),t=s.globalCompositeOperation,s.globalCompositeOperation="destination-out",s.fill(),s.globalCompositeOperation=t,s.stroke()),e.label&&b(e)}},bindPartsArray:function(e,t,n){a=e,c=t,h=n,f=o/c,l=u/h},getHTMLElement:function(){return i},updateCanvasSize:function(){o=i.width(),u=i.height(),f=o/c,l=u/h,i.attr("width",o),i.attr("height",u),v()}};return d(),v(),m(),E}}),n("energy2d/views/photons",[],function(){"use strict";return function(t){var n="energy2d-photons-view",r="energy2d-photons-view",i=10,s,o,u,a,f,l,c,h,p,d=function(){s=$("<canvas />"),s.attr("id",t||n),s.addClass(r),o=s[0].getContext("2d")},v=function(){o.strokeStyle="rgba(255,255,255,128)",o.lineWidth=.5},m={renderPhotons:function(){var e,t,n,r,h,p;if(!f)throw new Error("Photons view: bind parts array before rendering.");(u!==s.width()||a!==s.height())&&this.updateCanvasSize(),o.clearRect(0,0,u,a);for(h=0,p=f.length;h<p;h+=1)e=f[h],t=e.x*l,n=e.y*c,r=1/Math.sqrt(e.vx*e.vx+e.vy*e.vy),o.beginPath(),o.moveTo(t,n),o.lineTo(t+i*e.vx*r,n+i*e.vy*r),o.stroke()},bindPhotonsArray:function(e,t,n){f=e,h=t,p=n,l=u/h,c=a/p},getHTMLElement:function(){return s},updateCanvasSize:function(){u=s.width(),a=s.height(),l=u/h,c=a/p,s.attr("width",u),s.attr("height",a),v()}};return d(),v(),m}}),n("energy2d/views/time",[],function(){"use strict";return function(t){var n="energy2d-time",r="energy2d-time",i,s=function(){i=$("<div />"),i.attr("id",t||n),i.addClass(r),i.html("0:00:00:00")},o=function(e,t){var n=e.toString();while(n.length<t)n="0"+n;return n},u={renderTime:function(e){var t,n,r,s;e=Math.floor(e),t=e%60,e=Math.floor(e/60),n=e%60,e=Math.floor(e/60),r=e%24,e=Math.floor(e/24),s=e,i.html(s+":"+o(r,2)+":"+o(n,2)+":"+o(t,2))},getHTMLElement:function(){return i}};return s(),u}}),n("energy2d/views/visualization-container",["require","energy2d/views/heatmap","energy2d/views/heatmap-webgl","energy2d/views/vectormap","energy2d/views/vectormap-webgl","energy2d/views/parts","energy2d/views/photons","energy2d/views/time"],function(e){"use strict";var t=e("energy2d/views/heatmap"),n=e("energy2d/views/heatmap-webgl"),r=e("energy2d/views/vectormap"),i=e("energy2d/views/vectormap-webgl"
),s=e("energy2d/views/parts"),o=e("energy2d/views/photons"),u=e("energy2d/views/time");return function(a,f){var l="energy2d-scene-view",c="energy2d-scene-view",h={color_palette_type:0,minimum_temperature:0,maximum_temperature:40},p,d,v,m,g,y,b=0,w=function(){y=$("<div />"),y.attr("id",a||l),y.addClass(c),y.css("position","relative"),y.append(p.getHTMLElement()),y.append(d.getHTMLElement()),y.append(m.getHTMLElement()),y.append(v.getHTMLElement()),y.append(g.getHTMLElement())},E=function(e){var t=e.getHTMLElement();t.css("width","100%"),t.css("height","100%"),t.css("position","absolute"),t.css("left","0"),t.css("top","0"),t.css("z-index",b),b+=1},S=function(e){var t=e.getHTMLElement();t.css("color","white"),t.css("font-weight","bold"),t.css("font-family","Monospace"),t.css("position","absolute"),t.css("right","0"),t.css("top","0"),t.css("z-index",b),b+=1},x={getHeatmapView:function(){return p},getVelocityView:function(){return d},getPartsView:function(){return v},getPhotonsView:function(){return m},getTimeView:function(){return g},getHTMLElement:function(){return y},setVisualizationOptions:function(e){var t;for(t in h)h.hasOwnProperty(t)&&e[t]===undefined&&(e[t]=h[t]);p.setMinTemperature(e.minimum_temperature),p.setMaxTemperature(e.maximum_temperature),p.setColorPalette(e.color_palette_type)}};return f?(p=n(),d=i(),E(d)):(p=t(),d=r(),E(p),E(d)),m=o(),E(m),v=s(),E(v),g=u(),S(g),w(),x}}),n("energy2d/views/player",[],function(){"use strict";return function(t){var n="energy2d-simulation-player",r="energy2d-simulation-player",i,s,o=function(){var e;s=$("<div />"),s.attr("id",t||n),s.addClass(r),e=$('<button type="button" id="sim-stop">Stop</button>'),e.click(function(){i.simulationStop()}),s.append(e),e=$('<button type="button" id="sim-step">Step</button>'),e.click(function(){i.simulationStep()}),s.append(e),e=$('<button type="button" id="sim-play">Play</button>'),e.click(function(){i.simulationPlay()}),s.append(e),e=$('<button type="button" id="sim-reset">Reset</button>'),e.click(function(){i.simulationReset()}),s.append(e)},u={bindSimulationController:function(e){i=e},getHTMLElement:function(){return s}};return o(),u}}),n("energy2d/views/webgl-status",["require","energy2d/gpu/context","energy2d/gpu/texture"],function(e){"use strict";var t=e("energy2d/gpu/context"),n=e("energy2d/gpu/texture");return function(r){var i="energy2d-webgl-status",s,o,u,a,f,l,c=function(){s=$("<div />"),s.attr("id",r||i),s.append("<h2>WebGL status</h2>"),o=$("<p />"),s.append(o),a=$("<ul />"),s.append(a),u=$("<p />"),u.css("color","orange"),s.append(u)},h=function(){var e,r;l={};try{e=t.getWebGLContext(),l["WebGL context"]=!0}catch(i){l["WebGL context"]=!1;return}e.getExtension("OES_texture_float")?l["OES_texture_float extension"]=!0:l["OES_texture_float extension"]=!1,l["OES_texture_float extension"]&&(r=new n(1,1,{type:e.FLOAT,format:e.RGBA,filter:e.LINEAR}),r.setAsRenderTarget(),e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE?l["FLOAT texture as render target"]=!0:l["FLOAT texture as render target"]=!1,e.bindFramebuffer(e.FRAMEBUFFER,null))},p=function(){var e,t,n,r;o.html("Energy2D GPU solvers: "),f.isWebGLActive()?(t=$("<span>active</span>"),t.css("color","green")):(t=$("<span>inactive</span>"),t.css("color","orange")),o.append(t),a.html("");for(e in l)l.hasOwnProperty(e)&&(l[e]?(t=$("<span>available</span>"),t.css("color","green")):(t=$("<span>not available</span>"),t.css("color","red")),n=$("<li>"+e+": </li>"),n.append(t),a.append(n));u.html(""),r=f.getWebGLError(),r!==undefined&&u.append(r)},d={bindModel:function(e){f=e},updateAndRender:function(){h(),p()},getHTMLElement:function(){return s}};return c(),d}}),n("energy2d/views/description",[],function(){"use strict";return function(t){var n="energy2d-description",r="energy2d-description",i,s=function(){var e,s,o,u;i=$("<div />"),i.attr("id",t.id||n),i.addClass(t.class||r),e=$("<div>"+t.title+"</div>"),e.attr("class",n+"-title"),i.append(e),s=$("<div>"+t.tagline+"</div>"),s.attr("class",n+"-tagline"),i.append(s),o=$("<div>"+t.content+"</div>"),o.attr("class",n+"-content"),i.append(o),u=$("<div>"+t.footnote+"</div>"),u.attr("class",n+"-footnote"),i.append(u)},o={getHTMLElement:function(){return i}};return s(),o}}),n("energy2d/controllers/interactive",["require","energy2d/modeler","energy2d/utils/performance-monitor","energy2d/views/performance","energy2d/views/visualization-container","energy2d/views/player","energy2d/views/webgl-status","energy2d/views/description"],function(e){"use strict";var t=e("energy2d/modeler"),n=e("energy2d/utils/performance-monitor"),r=e("energy2d/views/performance"),i=e("energy2d/views/visualization-container"),s=e("energy2d/views/player"),o=e("energy2d/views/webgl-status"),u=e("energy2d/views/description");return function(a,f,l){var c,h,p,d,v=4,m,g,y,b,w,E,S,x,T={start:function(){},stop:function(){},startFPS:function(){},updateFPS:function(){},stopFPS:function(){}},N,C,k,L,A=function(e){return typeof Lab.config.actualRoot=="undefined"||e.charAt(0)!=="/"?e:Lab.config.actualRoot+e.slice(1)},O=function(e){return m=i(e.id,d),g=m.getHeatmapView(),y=m.getVelocityView(),b=m.getPartsView(),w=m.getPhotonsView(),E=m.getTimeView(),m},M=function(e){return S=s(e.id),S.bindSimulationController(c),S},_=function(e){return N=r(e.id),N},D=function(e){return C=o(e.id),C},P=function(e){return x=u(e),x},H=function(e){if(!e.type)throw new Error('Interactive controller: missing component "type" property.');switch(e.type){case"energy2d-scene-view":return O(e);case"energy2d-simulation-player":return M(e);case"energy2d-performance-view":return _(e);case"energy2d-webgl-status-view":return D(e);default:throw new Error("Interactive controller: unknow type of component.")}},B=function(){g.renderHeatmap(),y.renderVectormap(),w.renderPhotons(),E.renderTime(h.getTime()),N&&N.update()},j=function(){var e,t;T.stop("Gap between frames"),T.start("Frame (inc. "+v+" model steps)");for(e=0,t=v;e<t;e+=1)h.nextStep();T.start("Views update"),B(),T.stop("Views update"),T.stop("Frame (inc. "+v+" model steps)"),T.start("Gap between frames"),T.updateFPS("Model update and rendering")},F=function(){h=t(p.model),d=h.isWebGLActive()},I=function(){var e=a.components||[],t=a.description||{},n=a.layout||{},r,i,s,o,u;k=[];for(o=0,u=e.length;o<u;o+=1)r=H(e[o]),s=r.getHTMLElement(),i=n[e[o].id]||{},i.css&&s.css(i.css),i.class&&s.addClass(i.class),i.container?s.appendTo(i.container):s.appendTo(f),k.push(s);t&&(r=P(t),s=r.getHTMLElement(),s.appendTo(l),k.push(s))},q=function(){var e,t;for(e=0,t=k.length;e<t;e+=1)k[e].remove();k=[]},R=function(){var e,t;m.setVisualizationOptions(p.view),e=h.getGridWidth(),t=h.getGridHeight(),b.bindPartsArray(h.getPartsArray(),h.getWidth(),h.getHeight()),w.bindPhotonsArray(h.getPhotonsArray(),h.getWidth(),h.getHeight()),d?(g.bindHeatmapTexture(h.getTemperatureTexture()),y.bindVectormapTexture(h.getVelocityTexture(),e,t,25)):(g.bindHeatmap(h.getTemperatureArray(),e,t),y.bindVectormap(h.getUVelocityArray(),h.getVVelocityArray(),e,t,25)),N&&(T=n(),N.bindModel(T),h.setPerformanceTools(T)),C&&(C.bindModel(h),C.updateAndRender()),B(),b.renderParts()},U=function(){$.get(A(a.model)).success(function(e){typeof e=="string"&&(e=JSON.parse(e)),p=e,F(),I(),R()}).error(function(e,t,n){throw new Error("Interactive controller: loading scene options failed - "+t)})};return c={setWebGLEnabled:function(e){c.simulationStop(),p.model.use_WebGL=e,F(),q(),I(),R()},simulationPlay:function(){L||(L=setInterval(j,0),T.start("Gap between frames"),T.startFPS("Model update and rendering"))},simulationStep:function(){L||(T.start("Gap between frames"),j(),T.stop("Gap between frames"))},simulationStop:function(){L!==undefined&&(T.stop("Gap between frames"),T.stopFPS("Model update and rendering"),clearInterval(L),L=undefined)},simulationReset:function(){c.simulationStop(),F(),R()}},U(),c}}),n("energy2d/public-api",["require","../lab.config","energy2d/controllers/interactive"],function(e){"use strict";var t=e("../lab.config"),n=e("energy2d/controllers/interactive"),r;return r={InteractiveController:n},window.Lab=window.Lab||{},window.Lab.config=t,window.Lab.energy2d=r,r}),t(["energy2d/public-api"],undefined,undefined,!0)})();